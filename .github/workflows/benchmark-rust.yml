name: Benchmarks Rust

permissions: {}

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    paths:
      - '**/*.rs'
      - 'Cargo.lock'
      - 'rust-toolchain.toml'
      - 'scripts/misc/setup-benchmark-input/**'
      - '.github/workflows/benchmark-rust.yml'
  pull_request:
    types: [opened, synchronize]
    paths:
      - '**/*.rs'
      - 'Cargo.lock'
      - 'rust-toolchain.toml'
      - 'scripts/misc/setup-benchmark-input/**'
      - '.github/workflows/benchmark-rust.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: ${{ github.ref_name != 'main' }}

jobs:
  codspeed-benchmark:
    name: Codspeed Benchmark
    runs-on: ubuntu-latest
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1

      - name: Setup Node
        uses: ./.github/actions/setup-node

      - name: Setup Rust
        uses: oxc-project/setup-rust@cd82e1efec7fef815e2c23d296756f31c7cdc03d # v1.0.0
        with:
          tools: just, cargo-codspeed
          cache-key: codspeed
          save-cache: ${{ github.ref_name == 'main' }}

      - name: Setup Benchmark Input
        run: just setup-bench

      - name: Build the benchmark target(s)
        run: cargo codspeed build -p bench --features codspeed

      - name: Run the benchmarks
        uses: CodSpeedHQ/action@0010eb0ca6e89b80c88e8edaaa07cfe5f3e6664d # v3.5.0
        with:
          run: cargo codspeed run -p bench
          token: ${{ secrets.CODSPEED_TOKEN }}
        env:
          # ensure that `root_dir()` from `crates/rolldown_testing/src/workspace.rs` works during the benchmark
          # see https://github.com/adriencaccia/rolldown/pull/1 for explanation
          CARGO_MANIFEST_DIR: ${{ github.workspace }}/target/codspeed

  benchmark-rust:
    permissions:
      pull-requests: write
    name: Benchmark Rust
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1

      - name: Setup Node
        uses: ./.github/actions/setup-node

      - name: Setup Rust
        uses: oxc-project/setup-rust@cd82e1efec7fef815e2c23d296756f31c7cdc03d # v1.0.0
        with:
          tools: just, critcmp
          cache-key: rust-benchmark

      - name: Setup Benchmark Input
        run: just setup-bench

      - name: Run Bench on PR Branch
        run: cargo bench -p bench -- --save-baseline pr

      - name: Checkout Target Branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          clean: false
          ref: ${{ github.event.pull_request.base.ref }}
          persist-credentials: false

      - name: Run Bench on Target Branch
        run: cargo bench -p bench -- --save-baseline target

      - name: Compare Bench Results
        id: bench_comparison
        shell: bash
        env:
          BASE_REF: ${{ github.event.pull_request.base.ref }}
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
          HEAD_REF: ${{ github.event.pull_request.head.ref }}
          HEAD_SHA: ${{ github.event.pull_request.head.sha  }}
        run: |
          echo "### Benchmarks Rust" > output
          echo "- target: \`${BASE_REF}\`(${BASE_SHA})" >> output
          echo "- pr: \`${HEAD_REF}\`(${HEAD_SHA})" >> output
          echo "\`\`\`"  >> output
          critcmp target pr >> output
          echo "\`\`\`" >> output
          cat output
          comment="$(cat output)"
          comment="${comment//'%'/%25}"
          comment="${comment//$'\n'/%0A}"
          comment="${comment//$'\r'/%0D}"
          echo "::set-output name=comment::$comment"

      - name: Find Comment
        uses: peter-evans/find-comment@3eae4d37986fb5a8592848f6a574fdf654e61f9e # v3.1.0
        id: find-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Benchmarks Rust

      - name: Write a new comment
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
        continue-on-error: true
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: ${{ steps.bench_comparison.outputs.comment }}
          reactions-edit-mode: 'replace'
          edit-mode: replace
