name: Benchmarks Rust

on:
  push:
    branches:
      - 'main' # or "master"
    paths:
      - '**/*.rs'
      - '**/*.toml'
      - 'Cargo.lock'
      - 'rust-toolchain.toml'
  pull_request:
    types: [opened, synchronize]
    paths:
      - '**/*.rs'
      - '**/*.toml'
      - 'Cargo.lock'
      - 'rust-toolchain.toml'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: ${{ github.ref_name != 'main' }}

jobs:
  codspeed-benchmark:
    name: Codspeed Benchmark
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v4
        with:
          # Whether Pull submodules for additional files
          submodules: false

      - name: Install Rust
        uses: moonrepo/setup-rust@v1
        with:
          bins: just, cargo-codspeed
          cache-base: main
          cache-target: release

      - name: Install pnpm
        uses: pnpm/action-setup@v3

      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Setup benchmark
        run: just setup-bench

      - name: Build the benchmark target(s)
        run: cargo codspeed build -p bench

      - name: Run the benchmarks
        uses: CodSpeedHQ/action@v2
        with:
          run: cargo codspeed run -p bench
          token: ${{ secrets.CODSPEED_TOKEN }}

  rust-benchmark:
    name: Rust Benchmark
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v4
        with:
          # Whether Pull submodules for additional files
          submodules: false

      - name: Install Rust
        uses: moonrepo/setup-rust@v1
        with:
          bins: just
          cache-base: main
          cache-target: release

      - name: Install pnpm
        uses: pnpm/action-setup@v3

      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Setup benchmark
        run: just setup-bench

      - name: Download previous benchmark data
        uses: actions/checkout@v4
        with:
          # https://github.com/rolldown/benchmark-results-storage
          repository: rolldown/benchmark-results-storage
          path: tmp

      - name: Run the benchmarks
        run: cargo bench -p bench | tee tmp/new-benchmark-rust-output.txt

      - name: Save benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: 'Rust Benchmark'
          # What benchmark tool the output.txt came from
          tool: 'cargo'
          # Where the output from the benchmark tool is stored
          output-file-path: tmp/new-benchmark-rust-output.txt
          # Where the previous data file is stored
          external-data-json-path: tmp/benchmark-rust-output.txt
          fail-on-alert: ${{ github.event_name != 'push' }}
          summary-always: true
          comment-always: false
          save-data-file: ${{ github.event_name == 'push' }}
          alert-threshold: '110%' # Too much noise in the benchmark results
          github-token: ${{ secrets.REPO_TOKEN_BENCHMARK_RESULTS }}
          gh-pages-branch: 'main'
          gh-repository: 'rolldown/benchmark-results-storage'
          auto-push: ${{ github.event_name == 'push' }}
