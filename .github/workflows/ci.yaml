name: CI

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]
    paths-ignore:
      - '**/*.md'
      - '**/*.yml'
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - '**/*.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: ${{ github.ref_name != 'main' }}

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: ./.github/actions/rustup
        with:
          fmt: true
          restore-cache: false

      - name: Run Format
        run: cargo fmt --all -- --check

  lint:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: ./.github/actions/rustup
        with:
          clippy: true

      - name: Run Clippy
        run: cargo clippy --all -- --deny warnings

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: ./.github/actions/rustup

      - name: Install cargo-nextest
        uses: taiki-e/install-action@cargo-nextest

      - name: Run Test
        run: cargo nextest run

  node-test:
    name: Node test
    runs-on: 'ubuntu-latest'
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache
            target/
          key: node-test-${{ runner.os }}-${{ env.RUST_TOOLCHAIN }}
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn
      - name: 'Install dependencies'
        run: yarn install
      - name: Build
        run: |
          yarn build
      - name: Test
        run: |
          yarn test
