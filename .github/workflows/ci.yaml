name: CI

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]
    paths-ignore:
      - '**/*.md'
      - '**/*.yml'
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - '**/*.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: ${{ github.ref_name != 'main' }}

jobs:
  cargo-format:
    name: Cargo Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: moonrepo/setup-rust@v1
        with:
          cache: false
          components: rustfmt

      - name: Run Format
        run: cargo fmt --all -- --check

  cargo-deny:
    name: Cargo Deny
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            src:
              - 'Cargo.lock'

      - name: Install cargo-deny
        if: steps.filter.outputs.src == 'true'
        uses: taiki-e/install-action@cargo-deny

      - if: steps.filter.outputs.src == 'true'
        run: cargo deny check

  cargo-clippy:
    name: Cargo Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: moonrepo/setup-rust@v1
        with:
          cache-base: main
          components: clippy

      - name: Run Clippy
        run: cargo clippy --all -- --deny warnings

  cargo-test:
    name: Cargo Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: moonrepo/setup-rust@v1
        with:
          cache-base: main

      - name: Build
        run: cargo test --no-run

      - name: Run Test
        run: cargo test

  node-test:
    name: Node Test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # - windows-latest
          # - macos-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true # Pull submodules for additional files

      - name: Install Rust
        uses: moonrepo/setup-rust@v1
        with:
          cache-base: main

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn

      - name: Install dependencies
        run: yarn install

      - name: Build @rolldown/node
        run: yarn build:node

      - name: Test
        run: yarn test

  node-validation:
    name: Node Validation
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true # Pull submodules for additional files

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn

      - name: Install dependencies
        run: yarn install

      - name: Lint Filename
        run: yarn lint-filename

      - name: Oxc Lint
        # Run `yarn lint` to get display for warnings
        # Run `yarn lint:ci` to get exit code 1 for warnings
        run: |
          yarn lint
          yarn lint:ci

      - name: Run Prettier
        run: yarn prettier:ci
