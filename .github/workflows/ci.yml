name: CI
# Jobs in this workflow are all required run successfully before the PR can be merged. This is enforced by using github status checks.
# What's github status check: https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/about-status-checks

permissions: {}

on:
  pull_request:
    types: [opened, synchronize]
  merge_group:
  push:
    branches:
      - main
      - 'renovate/**' # For renovate bot "automerge": true
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: ${{ github.ref_name != 'main' }}

jobs:
  # JOB to run change detection
  changes: # https://github.com/dorny/paths-filter
    name: Detect Changes
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      rust-changes: ${{ (steps.filter.outputs.rust-changes == 'true') || (github.ref_name == 'main') }}
      node-changes: ${{ (steps.filter.outputs.node-changes == 'true') || (github.ref_name == 'main') }}
      pluginutils-changes: ${{ (steps.filter.outputs.pluginutils-changes == 'true') || (github.ref_name == 'main') }}
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1

      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: filter
        with:
          filters: |
            rust-changes: &rust-changes
              - '.github/workflows/**'
              - 'crates/**'
              - 'tasks/**'
              - 'Cargo.toml'
              - 'Cargo.lock'
              - 'rust-toolchain.toml'
              - 'pnpm-lock.yaml'
              - 'pnpm-workspace.yaml'
              - '.gitattributes'
            node-changes:
              - *rust-changes
              - 'packages/**'
              - 'examples/**'
              - 'scripts/**'
              - 'package.json'
            pluginutils-changes:
              - 'packages/pluginutils/**'
              - 'package.json'
              - 'pnpm-lock.yaml'
              - 'pnpm-workspace.yaml'
      - name: Show outputs
        run: |
          echo "Rust changes: ${{ (steps.filter.outputs.rust-changes == 'true') || (github.ref_name == 'main') }}"
          echo "Node changes: ${{ (steps.filter.outputs.node-changes == 'true') || (github.ref_name == 'main') }}"
          echo "PluginUtils changes: ${{ (steps.filter.outputs.pluginutils-changes == 'true') || (github.ref_name == 'main') }}"

  rust-validation:
    name: Rust Validation
    needs: changes
    if: ${{ needs.changes.outputs.rust-changes == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1

      - name: Setup Rust
        uses: oxc-project/setup-rust@cd82e1efec7fef815e2c23d296756f31c7cdc03d # v1.0.0
        with:
          tools: just
          cache-key: debug-build
          components: clippy

      - run: just check-rust

      - run: just lint-rust

  cargo-test:
    needs: changes
    strategy:
      matrix:
        target: [ubuntu-latest, macos-latest, windows-latest]
    uses: ./.github/workflows/reusable-cargo-test.yml
    with:
      os: ${{ matrix.target }}
      changed: ${{ needs.changes.outputs.rust-changes == 'true' }}

  node-test:
    needs: changes
    strategy:
      matrix:
        target: [ubuntu-latest, macos-latest, windows-latest]
    uses: ./.github/workflows/reusable-node-test.yml
    with:
      os: ${{ matrix.target }}
      changed: ${{ needs.changes.outputs.node-changes == 'true' }}

  # browser-test:
  # needs: changes
  # strategy:
  # matrix:
  # target: [ubuntu-latest, macos-latest, windows-latest]
  # uses: ./.github/workflows/reusable-browser-test.yml
  # with:
  # os: ${{ matrix.target }}
  # changed: ${{ needs.changes.outputs.node-changes == 'true' }}

  pluginutils-test:
    name: Pluginutils Test
    needs: changes
    if: ${{ needs.changes.outputs.pluginutils-changes == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1

      - name: Setup Node
        uses: ./.github/actions/setup-node

      - name: Test `@rolldown/pluginutils`
        run: pnpm --filter '@rolldown/pluginutils' test

  node-validation:
    name: Node Validation
    needs: changes
    if: ${{ needs.changes.outputs.node-changes == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1

      - name: Setup Node
        uses: ./.github/actions/setup-node

      - name: Lint Code
        run: pnpm lint-code

      - name: Validate workspace package
        run: node scripts/misc/published-package-check.mjs

  repo-validation:
    name: Repo Validation
    runs-on: ubuntu-latest
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1

      - name: Setup Node
        uses: ./.github/actions/setup-node

      - name: Lint Filename
        run: cargo ls-lint

      - name: update generated code
        run: |
          cargo run --bin generator
          git diff --exit-code

  typos:
    name: Spell Check
    runs-on: ubuntu-latest
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1
      - uses: crate-ci/typos@b1ae8d918b6e85bd611117d3d9a3be4f903ee5e4 # v1.33.1
        with:
          files: .
