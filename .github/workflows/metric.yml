name: Metric and Commit Results

permissions: {}

on:
  workflow_dispatch: # Allows manual triggering of the workflow
  push:
    branches:
      - main
    paths:
      - 'crates/**'
      - 'packages/**'
      - 'Cargo.lock'
      - 'rust-toolchain.toml'
      - 'pnpm-lock.yaml'
      - '.github/workflows/metric.yml'

jobs:
  compile-time-and-binary-size:
    name: Compile Time and Binary Size
    runs-on: ubuntu-latest
    outputs:
      time: ${{ steps.run.outputs.COMPILE_TIME }}
      binary_size: ${{ steps.run.outputs.BINARY_SIZE }}
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1
      - uses: oxc-project/setup-rust@cd82e1efec7fef815e2c23d296756f31c7cdc03d # v1.0.0
        with:
          cache-key: release-build
      - run: cargo clean # build from scratch using local system cache to avoid download from crates.io
      - id: run
        run: |
          /usr/bin/time -f "%e" -o output cargo build --release
          cat output
          COMPILE_TIME=$(cat output)
          echo $COMPILE_TIME
          echo "COMPILE_TIME=$COMPILE_TIME" >> $GITHUB_OUTPUT

          BINARY_SIZE=$(ls -l ./target/release/librolldown_binding.so | awk '{print $5}')
          echo $BINARY_SIZE
          echo "BINARY_SIZE=$BINARY_SIZE" >> $GITHUB_OUTPUT
          echo $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

  metric:
    name: Metric
    needs: [compile-time-and-binary-size]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout rolldown metric repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: 'rolldown/metric'
          ref: 'main'
          token: ${{ secrets.METRIC_SECRET_KEY }}
          persist-credentials: true # required by `git push` below

      - name: Setup Pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: Set up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: '22' # Specify the Node.js version you need
          cache: 'pnpm'

      - name: Install dependencies and push metric
        run: |
          pnpm install -r
          node ./scripts/compile-time-and-binary-size.mjs
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add metric.json
          git commit -m "Update benchmark results"
          git push

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMPILE_TIME: ${{ needs.compile-time-and-binary-size.outputs.time }}
          COMMIT_HASH: ${{ github.sha }}
          GIT_REPOSITORY_URL: ${{ github.repository }}
          BINARY_SIZE: ${{ needs.compile-time-and-binary-size.outputs.binary_size }}
