name: Publish to NPM

permissions: {}

on:
  push:
    branches:
      - main
    paths:
      - packages/rolldown/package.json

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check:
    name: Check version
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.version.outputs.changed }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1

      - name: Check version changes
        uses: EndBug/version-check@36ff30f37c7deabe56a30caa043d127be658c425 # v2.1.5
        id: version
        with:
          static-checking: localIsNew
          file-url: https://unpkg.com/rolldown@latest/package.json
          file-name: packages/rolldown/package.json

      - name: Print version
        if: steps.version.outputs.changed == 'true'
        env:
          NEW_VERSION: ${{ steps.version.outputs.version }}
        run: |
          echo "Version change found! New version: ${NEW_VERSION}"

  build:
    needs: check
    if: needs.check.outputs.version_changed == 'true'
    name: Build bindings and node packages
    uses: ./.github/workflows/reusable-release-build.yml

  publish:
    needs: build
    if: github.repository == 'rolldown/rolldown'
    name: Publish npm Packages
    runs-on: ubuntu-latest
    permissions:
      id-token: write # for `npm publish --provenance`
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1

      - name: Setup Node
        uses: ./.github/actions/setup-node

      - name: Git Reset Hard
        run: git reset --hard # fix pnpm install add new line for package.json

      - name: Download Binding Artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          path: packages/rolldown/artifacts

      - name: Move Binding Artifacts
        run: pnpm --filter rolldown artifacts

      - name: List Rolldown Bindings
        run: ls -R ./packages/rolldown/npm
        shell: bash

      - name: Download Node Artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          path: packages/rolldown/dist
          name: node-artifact

      - name: Download `@rolldown/browser` Artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          path: packages/browser/dist
          name: browser-artifact

      - name: Download `@rolldown/debug` Artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          path: packages/debug/dist
          name: debug-artifact

      - name: Download Pluginutils Artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          path: packages/pluginutils/dist
          name: pluginutils-artifact

      - name: Copy Licenses
        run: |
          find ./packages/ -type d -maxdepth 1 -exec cp LICENSE {} \;
          find ./packages/ -type d -maxdepth 1 -exec cp THIRD-PARTY-LICENSE {} \;

      - name: Set Publishing Config
        run: pnpm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
        env:
          NPM_TOKEN: ${{ secrets.ROLLDOWN_NPM_TOKEN }}

      - name: Publish(Dry Run)
        run: |
          pnpm publish -r --tag latest --dry-run --no-git-checks
        env:
          NPM_TOKEN: ${{ secrets.ROLLDOWN_NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish
        run: |
          pnpm publish -r --tag latest --no-git-checks
        env:
          NPM_TOKEN: ${{ secrets.ROLLDOWN_NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_CONFIG_PROVENANCE: true

  release:
    needs: [check, publish]
    if: github.repository == 'rolldown/rolldown'
    name: GitHub Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # for softprops/action-gh-release@v1
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1

      - name: Get changelog from commit body
        id: changelog
        run: |
          {
            echo 'CHANGELOG<<EOF'
            git show -s --format=%b
            echo EOF
          } >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # v2.2.2
        with:
          draft: false
          tag_name: v${{ needs.check.outputs.version }} # tags the current commit
          target_commitish: ${{ github.sha }}
          body: ${{ steps.changelog.outputs.CHANGELOG }}
