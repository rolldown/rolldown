name: Release

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-binding:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
            build: |
              yarn build:binding:release
              strip -x crates/rolldown_binding/*.node

          - os: macos-latest
            target: aarch64-apple-darwin
            build: |
              sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*;
              export CC=$(xcrun -f clang);
              export CXX=$(xcrun -f clang++);
              SYSROOT=$(xcrun --sdk macosx --show-sdk-path);
              export CFLAGS="-isysroot $SYSROOT -isystem $SYSROOT";
              export CARGO_BUILD_TARGET=aarch64-apple-darwin
              yarn build:binding:release
              strip -x crates/rolldown_binding/*.node

          - os: windows-latest
            target: x86_64-pc-windows-msvc
            build: yarn build:binding:release

          - os: windows-latest
            target: i686-pc-windows-msvc
            build: |
              export CARGO_BUILD_TARGET=i686-pc-windows-msvc
              yarn build:binding:release

          - os: windows-latest
            target: aarch64-pc-windows-msvc
            build: |
              export CARGO_BUILD_TARGET=aarch64-pc-windows-msvc
              yarn build:binding:release

          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian
            build: |-
              set -e &&
              export CARGO_BUILD_TARGET=x86_64-unknown-linux-gnu &&
              yarn build:binding:release &&
              strip crates/rolldown_binding/*.node

          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine
            build: set -e && yarn build:binding:release && strip crates/rolldown_binding/*.node

          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian-aarch64
            build: |-
              set -e &&
              export CARGO_BUILD_TARGET=aarch64-unknown-linux-gnu &&
              rustup target add aarch64-unknown-linux-gnu &&
              yarn build:binding:release &&
              aarch64-unknown-linux-gnu-strip crates/rolldown_binding/*.node

          - os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
            build: |
              sudo apt-get update
              sudo apt-get install gcc-arm-linux-gnueabihf -y
              export CARGO_BUILD_TARGET=armv7-unknown-linux-gnueabihf
              yarn build:binding:release
              arm-linux-gnueabihf-strip crates/rolldown_binding/*.node

          - os: ubuntu-latest
            target: aarch64-linux-android
            build: |
              export CARGO_BUILD_TARGET=aarch64-linux-android
              yarn build:binding:release
              ${ANDROID_NDK_LATEST_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-strip crates/rolldown_binding/*.node

          - os: ubuntu-latest
            target: armv7-linux-androideabi
            build: |
              export CARGO_BUILD_TARGET=armv7-linux-androideabi
              yarn build:binding:release
              ${ANDROID_NDK_LATEST_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-strip crates/rolldown_binding/*.node

          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine
            build: |-
              set -e &&
              rustup target add aarch64-unknown-linux-musl &&
              export CARGO_BUILD_TARGET=aarch64-unknown-linux-musl &&
              export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_MUSL_LINKER=aarch64-linux-musl-gcc &&
              yarn build:binding:release &&
              /aarch64-linux-musl-cross/bin/aarch64-linux-musl-strip crates/rolldown_binding/*.node
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: moonrepo/setup-rust@v1
        with:
          cache-base: main

      - name: Add Rust Target
        run: rustup target add ${{ matrix.target }}

      - uses: goto-bus-stop/setup-zig@v2
        if: ${{ matrix.target == 'armv7-unknown-linux-gnueabihf' }}
        with:
          version: 0.10.1

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 18.18.0
          cache: yarn

      - name: Install dependencies
        run: yarn install

      - name: Build Binding in docker
        uses: addnab/docker-run-action@v3
        if: ${{ matrix.docker }}
        with:
          image: ${{ matrix.docker }}
          run: ${{ matrix.build }}
          options: '--user 0:0 -v ${{ github.workspace }}/.cargo-cache/git/db:/usr/local/cargo/git/db -v ${{ github.workspace }}/.cargo/registry/cache:/usr/local/cargo/registry/cache -v ${{ github.workspace }}/.cargo/registry/index:/usr/local/cargo/registry/index -v ${{ github.workspace }}:/build -w /build'
          shell: bash

      - name: Build Binding
        run: ${{ matrix.build }}
        if: ${{ !matrix.docker }}
        shell: bash

      - name: Upload Binding Artifact
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: bindings-${{ matrix.target }}
          path: crates/rolldown_binding/*.node

  build-node-packages:
    strategy:
      fail-fast: false
    name: Build Node Package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 18.18.0
          cache: yarn

      - name: Install dependencies
        run: yarn install

      - name: Build Node Packages
        run: yarn build:node:ci

      - name: Upload Node Artifact
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: node-artifact
          path: packages/node/dist/**

  test:
    needs:
      - build-binding
      - build-node-packages
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin

          - os: windows-latest
            target: x86_64-pc-windows-msvc

          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
    name: Test ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true # Pull submodules for additional files

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 18.18.0
          cache: yarn

      - name: Install dependencies
        run: yarn install

      - name: Download Binding Artifacts
        uses: actions/download-artifact@v4
        with:
          path: crates/rolldown_binding/artifacts

      - name: Move Binding Artifacts
        run: yarn workspace @rolldown/node-binding artifacts

      - name: List packages
        run: ls -R ./crates/rolldown_binding
        shell: bash

      - name: Download Node Artifacts
        uses: actions/download-artifact@v4
        with:
          path: packages/node/dist
          name: node-artifact

      - name: Node Test
        run: yarn test

  publish:
    name: Publish Npm Packages
    runs-on: ubuntu-latest
    permissions:
      contents: write # for softprops/action-gh-release@v1
      id-token: write # for `npm publish --provenance`
    needs:
      - test
    steps:
      - uses: actions/checkout@v4

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 18.18.0
          cache: yarn

      - name: Install dependencies
        run: yarn install

      - name: Download Binding Artifacts
        uses: actions/download-artifact@v4
        with:
          path: crates/rolldown_binding/artifacts

      - name: Move Binding Artifacts
        run: yarn workspace @rolldown/node-binding artifacts

      - name: List packages
        run: ls -R ./crates/rolldown_binding
        shell: bash

      - name: Download Node Artifacts
        uses: actions/download-artifact@v4
        with:
          path: packages/node/dist
          name: node-artifact

      - name: Publish
        run: |
          find ./packages/ -type d -maxdepth 1 -exec cp LICENSE {} \;
          find ./packages/ -type d -maxdepth 1 -exec cp THIRD-PARTY-LICENSE {} \;
          echo "//registry.npmjs.org/:_authToken=$ROLLDOWN_NPM_TOKEN" >> ~/.npmrc
          yarn lerna publish from-package --no-private --no-verify-access --yes
        env:
          ROLLDOWN_NPM_TOKEN: ${{ secrets.ROLLDOWN_NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
