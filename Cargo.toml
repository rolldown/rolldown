[workspace]
members  = ["./crates/*"]
resolver = "2"

[workspace.package]
edition    = "2021"
homepage   = "https://rolldown.rs/"
license    = "MIT"
repository = "https://github.com/rolldown/rolldown"

[profile.release-debug]
debug    = true
inherits = "release"

[workspace.lints.rust]

[workspace.lints.clippy]
# Guidelines
# - We should only disable rules globally if they are either false positives, chaotic, or does not make sense.
# - Group are enabled with priority -1, so we could easily override some specific rules.
#   - https://doc.rust-lang.org/stable/cargo/reference/manifest.html#the-lints-section

# --- restriction https://doc.rust-lang.org/clippy/usage.html#clippyrestriction
dbg_macro    = "deny"
print_stdout = "deny"

# I like the explicitness of this rule as it removes confusion around `clone`.
# This increases readability, avoids `clone` mindlessly and heap allocating on accident.
clone_on_ref_ptr                = "deny"
empty_drop                      = "deny"
exit                            = "deny"
filetype_is_file                = "deny"
get_unwrap                      = "deny"
rc_buffer                       = "deny"
rc_mutex                        = "deny"
rest_pat_in_fully_bound_structs = "deny"
unnecessary_safety_comment      = "deny"

# --- pedantic #https://doc.rust-lang.org/clippy/usage.html#clippypedantic
# To write the best rust code, pedantic group is enabled by default.
pedantic = { level = "deny", priority = -1 }

# Wizards, naming is too hard.
module_inception        = "allow"
module_name_repetitions = "allow"
similar_names           = "allow"

# Forwarding `Result` is a common pattern, this rule is too pedantic.
missing_errors_doc = "allow"

# #[must_use] is creating too much noise for this codebase, it does not add much value except nagging
# the programmer to add a #[must_use] after clippy has been run.
# Having #[must_use] everywhere also hinders readability.
must_use_candidate = "allow"

doc_markdown         = "allow"
missing_const_for_fn = "allow"
needless_for_each    = "allow"
new_without_default  = "allow"
# TODO: should review this rule.
missing_panics_doc = "allow"

# Order doesn't really matter https://rust-lang.github.io/rust-clippy/master/index.html#/inconsistent_struct_constructor
inconsistent_struct_constructor = "allow"

# Single match is equally readable as if/else. https://rust-lang.github.io/rust-clippy/master/index.html#/single_match
single_match = "allow"

[workspace.dependencies]
anyhow                    = "1.0.81"
ariadne                   = "0.4.0"
async-scoped              = { version = "0.9.0" }
async-trait               = "0.1.79"
codspeed-criterion-compat = "2.4"
dashmap                   = "5.5.3"
derivative                = "2.2.0"
dunce                     = "1.0.4"                                                                          # Normalize Windows paths to the most compatible format, avoiding UNC where possible
futures                   = "0.3.30"
index_vec                 = "0.1.3"
insta                     = "1.38.0"
mimalloc                  = "0.1.39"
napi                      = { version = "3.0.0-alpha.0", features = ["async"] }
napi-build                = { version = "2.1.2" }
napi-derive               = { version = "3.0.0-alpha.0", default-features = false, features = ["type-def"] }
once_cell                 = "1.19.0"
oxc                       = { version = "0.12.2", features = ["sourcemap"] }
oxc_resolver              = { version = "1.6.4", features = ["package_json_raw_json_api"] }
path-slash                = "0.2.1"
rayon                     = "1.10.0"
regex                     = "1.10.4"
rolldown                  = { path = "./crates/rolldown" }
rolldown_common           = { path = "./crates/rolldown_common" }
rolldown_error            = { path = "./crates/rolldown_error" }
rolldown_fs               = { path = "./crates/rolldown_fs" }
rolldown_oxc_utils        = { path = "./crates/rolldown_oxc_utils" }
rolldown_plugin           = { path = "./crates/rolldown_plugin" }
rolldown_resolver         = { path = "./crates/rolldown_resolver" }
rolldown_rstr             = { path = "./crates/rolldown_rstr" }
rolldown_sourcemap        = { path = "./crates/rolldown_sourcemap" }
rolldown_testing          = { path = "./crates/rolldown_testing" }
rolldown_tracing          = { path = "./crates/rolldown_tracing" }
rolldown_utils            = { path = "./crates/rolldown_utils" }
rustc-hash                = "1.1.0"
schemars                  = "0.8.16"
serde                     = { version = "1.0.197", features = ["derive"] }
serde_json                = "1.0.115"
smallvec                  = "1.13.2"
sugar_path                = "0.0.12"
testing_macros            = "0.2.13"
tokio                     = { version = "1.37.0", default-features = false }
tracing                   = "0.1.40"
vfs                       = "0.12.0"

[profile.release]
codegen-units = 1
lto           = true
strip         = "symbols"
