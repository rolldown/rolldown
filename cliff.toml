# git-cliff ~ configuration file
# https://git-cliff.org/docs/configuration

[remote.github]
owner = "rolldown"
repo = "rolldown"

# https://git-cliff.org/docs/configuration/bump
[bump]
features_always_bump_minor = false
breaking_always_bump_major = false

[changelog]
# changelog header
header = ""
footer = ""
# remove the leading and trailing whitespace from the templates
trim = true
# template for the changelog body
# https://keats.github.io/tera/docs/#introduction
body = """
{%- macro remote_url() -%}
  https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}
{%- endmacro -%}

{%- macro print_commit(commit) -%}
  {% if commit.remote.pr_title -%}
    {%- set commit_message = commit.remote.pr_title -%}
  {%- else -%}
    {%- set commit_message = commit.message -%}
  {%- endif -%}
  - {% if commit.scope %}{{ commit.scope }}: {% endif %}\
    {{ commit_message | split(pat="\n") | first | trim }}\
    {% if commit.remote.username %} by @{{ commit.remote.username }}{%- endif -%}
    {% if commit.remote.pr_number %} in [#{{ commit.remote.pr_number }}]({{ self::remote_url() }}/pull/{{ commit.remote.pr_number }}) {%- endif -%}
    {% raw %}\n{% endraw -%}
{%- endmacro -%}

{%- if version -%}
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}{% raw %}\n\n{% endraw -%}
{%- else -%}
    ## [Unreleased]{% raw %}\n\n{% endraw -%}
{%- endif -%}

{%- if commits | filter(attribute="breaking", value=true) | length != 0 -%}
  ### 💥 BREAKING CHANGES{% raw %}\n\n{% endraw -%}
  {%- for commit in commits | filter(attribute="breaking", value=true) -%}
     {{ self::print_commit(commit=commit) }}
  {%- endfor -%}\
  {% raw %}\n{% endraw -%}
{%- endif -%}

{%- for group, commits in commits | filter(attribute="breaking", value=false) | sort(attribute="group") | group_by(attribute="group") -%}
  {%- if commits | length != 0 -%}
    ### {{ group | striptags | trim | upper_first }}{% raw %}\n\n{% endraw -%}
    {%- for commit in commits -%}
        {{ self::print_commit(commit=commit) }}
    {%- endfor -%}
    {% raw %}\n{% endraw -%}
  {%- endif -%}
{%- endfor -%}

{%- if github -%}
  {%- if github.contributors | filter(attribute="is_first_time", value=true) | length != 0 -%}
    ### ❤️ New Contributors{% raw %}\n\n{% endraw -%}
    {%- for contributor in github.contributors | filter(attribute="is_first_time", value=true) -%}
      * @{{ contributor.username }} made their first contribution\
        {%- if contributor.pr_number %} in [#{{ contributor.pr_number }}]({{ self::remote_url() }}/pull/{{ contributor.pr_number }}) {%- endif -%}
        {% raw %}\n{% endraw -%}
    {%- endfor -%}
    {% raw %}\n{% endraw -%}
  {%- endif -%}
{%- endif -%}
"""

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = true
# Require all commits to be conventional.
# Takes precedence over filter_unconventional.
require_conventional = false
# process each line of a commit as an individual commit
split_commits = false
# protect breaking changes from being skipped due to matching a skipping commit_parser
protect_breaking_commits = false
# filter out the commits that are not matched by commit parsers
filter_commits = false
# sort the tags topologically
topo_order = false
# sort the commits inside sections by oldest/newest order
sort_commits = "newest"
# regex for parsing and grouping commits
commit_parsers = [
  { message = "^feat", group = "<!-- 0 -->🚀 Features" },
  { message = "^fix", group = "<!-- 1 -->🐛 Bug Fixes" },
  { message = "^doc", group = "<!-- 3 -->📚 Documentation" },
  { message = "^perf", group = "<!-- 4 -->⚡ Performance" },
  { message = "^refactor", group = "<!-- 2 -->🚜 Refactor" },
  { message = "^style", group = "<!-- 5 -->🎨 Styling" },
  { message = "^test", group = "<!-- 6 -->🧪 Testing" },
  { message = "^chore\\(release\\): prepare for", skip = true },
  { message = "^chore\\(deps.*\\)", skip = true },
  { message = "^chore\\(pr\\)", skip = true },
  { message = "^chore\\(pull\\)", skip = true },
  { message = "^chore|^ci", group = "<!-- 7 -->⚙️ Miscellaneous Tasks" },
  { body = ".*security", group = "<!-- 8 -->🛡️ Security" },
  { message = "^revert", group = "<!-- 9 -->◀️ Revert" },
  { message = ".*", group = "<!-- 10 -->💼 Other" },
]
