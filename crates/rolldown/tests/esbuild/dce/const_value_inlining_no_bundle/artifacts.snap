---
source: crates/rolldown_testing/src/integration_test.rs
---
# Assets

## backwards-reference-nested-function_js.js

```js

```
## backwards-reference-top-level_js.js

```js

//#region backwards-reference-top-level.js
const x = y;
const y = 1;
console.log(x, x, y, y);

//#endregion
```
## comment-before_js.js

```js

//#region comment-before.js
{
	const REMOVE = 1;
	x = [REMOVE, REMOVE];
}

//#endregion
```
## debugger-before_js.js

```js

//#region debugger-before.js
{
	debugger;
	const REMOVE = 1;
	x = [REMOVE, REMOVE];
}

//#endregion
```
## directive-before_js.js

```js

```
## disabled-tdz_js.js

```js

//#region disabled-tdz.js
foo();
const x_keep = 1;
function foo() {
	return x_keep;
}

//#endregion
```
## exprs-before_js.js

```js

```
## issue-3125_js.js

```js

```
## namespace-export_ts.js

```js

//#region namespace-export.ts
let ns;
(function(_ns) {
	const x_REMOVE = 1;
	const y_keep = _ns.y_keep = 2;
	console.log(x_REMOVE, x_REMOVE, y_keep, y_keep);
})(ns || (ns = {}));

//#endregion
```
## nested-block_js.js

```js

//#region nested-block.js
{
	const REMOVE_n = null;
	const REMOVE_u = undefined;
	const REMOVE_i = 1234567;
	const REMOVE_f = 123.456;
	const s_keep = "";
	console.log(
		// These are doubled to avoid the "inline const/let into next statement if used once" optimization
		REMOVE_n,
		REMOVE_n,
		REMOVE_u,
		REMOVE_u,
		REMOVE_i,
		REMOVE_i,
		REMOVE_f,
		REMOVE_f,
		s_keep,
		s_keep
);
}

//#endregion
```
## nested-function_js.js

```js

```
## semicolon-before_js.js

```js

//#region semicolon-before.js
{
	const REMOVE = 1;
	x = [REMOVE, REMOVE];
}

//#endregion
```
## top-level_js.js

```js

//#region top-level.js
const n_keep = null;
const u_keep = undefined;
const i_keep = 1234567;
const f_keep = 123.456;
const s_keep = "";
console.log(
	// These are doubled to avoid the "inline const/let into next statement if used once" optimization
	n_keep,
	n_keep,
	u_keep,
	u_keep,
	i_keep,
	i_keep,
	f_keep,
	f_keep,
	s_keep,
	s_keep
);

//#endregion
```
## type-before_ts.js

```js

//#region type-before.ts
{
	const REMOVE = 1;
	x = [REMOVE, REMOVE];
}

//#endregion
```
