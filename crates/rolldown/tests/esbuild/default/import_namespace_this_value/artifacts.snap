---
source: crates/rolldown_testing/src/integration_test.rs
---
# warnings

## UNRESOLVED_IMPORT

```text
[UNRESOLVED_IMPORT] Warning: Could not resolve 'external' in a.js
   ╭─[ a.js:1:26 ]
   │
 1 │ import def, * as ns from 'external'
   │                          ─────┬────  
   │                               ╰────── Module not found, treating it as an external dependency
───╯

```
## UNRESOLVED_IMPORT

```text
[UNRESOLVED_IMPORT] Warning: Could not resolve 'external' in b.js
   ╭─[ b.js:1:26 ]
   │
 1 │ import def, * as ns from 'external'
   │                          ─────┬────  
   │                               ╰────── Module not found, treating it as an external dependency
───╯

```
## UNRESOLVED_IMPORT

```text
[UNRESOLVED_IMPORT] Warning: Could not resolve 'external' in c.js
   ╭─[ c.js:1:24 ]
   │
 1 │ import def, {foo} from 'external'
   │                        ─────┬────  
   │                             ╰────── Module not found, treating it as an external dependency
───╯

```
# Assets

## a.js

```js
"use strict";
const require_chunk = require('./chunk.js');
const external = require_chunk.__toESM(require("external"));

//#region a.js
console.log(external[foo](), new external[foo]());

```
## b.js

```js
"use strict";
const require_chunk = require('./chunk.js');
const external = require_chunk.__toESM(require("external"));

//#region b.js
console.log(external.foo(), new external.foo());

```
## c.js

```js
"use strict";
const require_chunk = require('./chunk.js');
const external = require_chunk.__toESM(require("external"));

//#region c.js
console.log((0, external.default)(), (0, external.foo)());
console.log(new external.default(), new external.foo());

```
## chunk.js

```js
"use strict";
//#region rolldown:runtime
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc) => {
	if (from && typeof from === "object" || typeof from === "function") for (var keys = __getOwnPropNames(from), i = 0, n = keys.length, key; i < n; i++) {
		key = keys[i];
		if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
			get: ((k) => from[k]).bind(null, key),
			enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
		});
	}
	return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", {
	value: mod,
	enumerable: true
}) : target, mod));


Object.defineProperty(exports, '__toESM', {
  enumerable: true,
  get: function () {
    return __toESM;
  }
});
```
