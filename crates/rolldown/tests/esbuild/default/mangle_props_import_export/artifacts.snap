---
source: crates/rolldown_testing/src/integration_test.rs
---
# warnings

## UNRESOLVED_IMPORT

```text
[UNRESOLVED_IMPORT] Warning: Could not resolve 'xyz' in cjs.js
   ╭─[ cjs.js:2:20 ]
   │
 2 │ let bar_ = require('xyz').bar_
   │                    ──┬──  
   │                      ╰──── Module not found, treating it as an external dependency
───╯

```
## UNRESOLVED_IMPORT

```text
[UNRESOLVED_IMPORT] Warning: Could not resolve 'xyz' in esm.js
   ╭─[ esm.js:2:22 ]
   │
 2 │ import { bar_ } from 'xyz'
   │                      ──┬──  
   │                        ╰──── Module not found, treating it as an external dependency
───╯

```
# Assets

## cjs.js

```js

//#region rolldown:runtime
var __getOwnPropNames = Object.getOwnPropertyNames;
var __commonJS = (cb, mod) => function() {
	return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __require = /* @__PURE__ */ ((x) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x, { get: (a, b) => (typeof require !== "undefined" ? require : a)[b] }) : x)(function(x) {
	if (typeof require !== "undefined") return require.apply(this, arguments);
	throw Error("Calling `require` for \"" + x + "\" in an environment that doesn't expose the `require` function.");
});

//#region cjs.js
var require_cjs = __commonJS({ "cjs.js"(exports) {
	exports.foo_ = 123;
	let bar_ = __require("xyz").bar_;
} });

export default require_cjs();

```
## esm.js

```js
import "xyz";

//#region esm.js
let foo_ = 123;

export { foo_ };
```
