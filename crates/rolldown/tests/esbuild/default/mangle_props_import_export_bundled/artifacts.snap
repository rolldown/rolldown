---
source: crates/rolldown_testing/src/integration_test.rs
---
# Assets

## cjs.js

```js
// HIDDEN [rolldown:runtime]
//#region esm.js
var esm_exports = /* @__PURE__ */ __export({ esm_foo_: () => esm_foo_ });
var esm_foo_;
var init_esm = __esm({ "esm.js": (() => {
	esm_foo_ = "foo";
}) });

//#endregion
//#region cjs.js
var require_cjs = /* @__PURE__ */ __commonJS({ "cjs.js": ((exports) => {
	exports.cjs_foo_ = "foo";
}) });

//#endregion
export { __commonJS as a, init_esm as i, esm_exports as n, __toCommonJS as o, esm_foo_ as r, __toESM as s, require_cjs as t };
```

## entry-cjs.js

```js
import { a as __commonJS, i as init_esm, n as esm_exports, o as __toCommonJS, t as require_cjs } from "./cjs.js";

//#region entry-cjs.js
var require_entry_cjs = /* @__PURE__ */ __commonJS({ "entry-cjs.js": ((exports) => {
	let { esm_foo_ } = (init_esm(), __toCommonJS(esm_exports));
	let { cjs_foo_ } = require_cjs();
	exports.bar_ = [esm_foo_, cjs_foo_];
}) });

//#endregion
export default require_entry_cjs();

```

## entry-esm.js

```js
import { i as init_esm, r as esm_foo_, s as __toESM, t as require_cjs } from "./cjs.js";

//#region entry-esm.js
init_esm();
var import_cjs = /* @__PURE__ */ __toESM(require_cjs());
var import_cjs$1 = /* @__PURE__ */ __toESM(require_cjs());
let bar_ = [
	esm_foo_,
	import_cjs.cjs_foo_,
	esm_foo_,
	import_cjs$1.cjs_foo_
];

//#endregion
export { bar_ };
```
