---
source: crates/rolldown_testing/src/integration_test.rs
---
# Assets

## cjs.js

```js

//#region rolldown:runtime
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = (fn, res) => function() {
	return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function() {
	return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
	for (var name in all) __defProp(target, name, {
		get: all[name],
		enumerable: true
	});
};
var __copyProps = (to, from, except, desc) => {
	if (from && typeof from === "object" || typeof from === "function") for (var keys = __getOwnPropNames(from), i = 0, n = keys.length, key; i < n; i++) {
		key = keys[i];
		if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
			get: ((k) => from[k]).bind(null, key),
			enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
		});
	}
	return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", {
	value: mod,
	enumerable: true
}) : target, mod));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

//#region esm.js
var esm_exports = {};
__export(esm_exports, { esm_foo_: () => esm_foo_ });
var esm_foo_;
var init_esm = __esm({ "esm.js"() {
	esm_foo_ = "foo";
} });

//#region cjs.js
var require_cjs = __commonJS({ "cjs.js"(exports) {
	exports.cjs_foo_ = "foo";
} });
var import_cjs = __toESM(require_cjs());

export { __commonJS, __toCommonJS, esm_exports, esm_foo_, import_cjs, init_esm, require_cjs };
```
## entry-cjs.js

```js
import { __commonJS, __toCommonJS, esm_exports, init_esm, require_cjs } from "./cjs.js";

//#region entry-cjs.js
var require_entry_cjs = __commonJS({ "entry-cjs.js"(exports) {
	let { esm_foo_ } = (init_esm(), __toCommonJS(esm_exports));
	let { cjs_foo_ } = require_cjs();
	exports.bar_ = [esm_foo_, cjs_foo_];
} });

export default require_entry_cjs();

```
## entry-esm.js

```js
import { esm_foo_, import_cjs, init_esm } from "./cjs.js";

//#region entry-esm.js
init_esm();
let bar_ = [
	esm_foo_,
	import_cjs.cjs_foo_,
	esm_foo_,
	import_cjs.cjs_foo_
];

export { bar_ };
```
