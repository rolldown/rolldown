---
source: crates/rolldown_testing/src/integration_test.rs
---
# warnings

## UNRESOLVED_IMPORT

```text
[UNRESOLVED_IMPORT] Warning: Could not resolve 'a_nowrap' in entry.js
   ╭─[ entry.js:1:8 ]
   │
 1 │ import 'a_nowrap'
   │        ─────┬────  
   │             ╰────── Module not found, treating it as an external dependency
───╯

```
## UNRESOLVED_IMPORT

```text
[UNRESOLVED_IMPORT] Warning: Could not resolve 'b_nowrap' in entry.js
   ╭─[ entry.js:3:19 ]
   │
 3 │ import { b } from 'b_nowrap'
   │                   ─────┬────  
   │                        ╰────── Module not found, treating it as an external dependency
───╯

```
## UNRESOLVED_IMPORT

```text
[UNRESOLVED_IMPORT] Warning: Could not resolve 'c_nowrap' in entry.js
   ╭─[ entry.js:6:15 ]
   │
 6 │ export * from 'c_nowrap'
   │               ─────┬────  
   │                    ╰────── Module not found, treating it as an external dependency
───╯

```
## UNRESOLVED_IMPORT

```text
[UNRESOLVED_IMPORT] Warning: Could not resolve 'd_WRAP' in entry.js
   ╭─[ entry.js:8:20 ]
   │
 8 │ import * as d from 'd_WRAP'
   │                    ────┬───  
   │                        ╰───── Module not found, treating it as an external dependency
───╯

```
## UNRESOLVED_IMPORT

```text
[UNRESOLVED_IMPORT] Warning: Could not resolve 'e_WRAP' in entry.js
    ╭─[ entry.js:11:15 ]
    │
 11 │ import e from 'e_WRAP'
    │               ────┬───  
    │                   ╰───── Module not found, treating it as an external dependency
────╯

```
## UNRESOLVED_IMPORT

```text
[UNRESOLVED_IMPORT] Warning: Could not resolve 'f_WRAP' in entry.js
    ╭─[ entry.js:14:30 ]
    │
 14 │ import { default as f } from 'f_WRAP'
    │                              ────┬───  
    │                                  ╰───── Module not found, treating it as an external dependency
────╯

```
## UNRESOLVED_IMPORT

```text
[UNRESOLVED_IMPORT] Warning: Could not resolve 'g_WRAP' in entry.js
    ╭─[ entry.js:17:33 ]
    │
 17 │ import { __esModule as g } from 'g_WRAP'
    │                                 ────┬───  
    │                                     ╰───── Module not found, treating it as an external dependency
────╯

```
## UNRESOLVED_IMPORT

```text
[UNRESOLVED_IMPORT] Warning: Could not resolve 'h_WRAP' in entry.js
    ╭─[ entry.js:20:20 ]
    │
 20 │ import * as h from 'h_WRAP'
    │                    ────┬───  
    │                        ╰───── Module not found, treating it as an external dependency
────╯

```
## UNRESOLVED_IMPORT

```text
[UNRESOLVED_IMPORT] Warning: Could not resolve 'i_WRAP' in entry.js
    ╭─[ entry.js:23:20 ]
    │
 23 │ import * as i from 'i_WRAP'
    │                    ────┬───  
    │                        ╰───── Module not found, treating it as an external dependency
────╯

```
## UNRESOLVED_IMPORT

```text
[UNRESOLVED_IMPORT] Warning: Could not resolve 'j_WRAP' in entry.js
    ╭─[ entry.js:26:20 ]
    │
 26 │ import * as j from 'j_WRAP'
    │                    ────┬───  
    │                        ╰───── Module not found, treating it as an external dependency
────╯

```
## UNRESOLVED_IMPORT

```text
[UNRESOLVED_IMPORT] Warning: Could not resolve 'k_WRAP' in entry.js
    ╭─[ entry.js:29:12 ]
    │
 29 │ x = import("k_WRAP")
    │            ────┬───  
    │                ╰───── Module not found, treating it as an external dependency
────╯

```
# Assets

## entry.js

```js
// HIDDEN [rolldown:runtime]
require("a_nowrap");
let b_nowrap = require("b_nowrap");
b_nowrap = __toESM(b_nowrap);
let d_WRAP = require("d_WRAP");
d_WRAP = __toESM(d_WRAP);
let e_WRAP = require("e_WRAP");
e_WRAP = __toESM(e_WRAP);
let f_WRAP = require("f_WRAP");
f_WRAP = __toESM(f_WRAP);
let g_WRAP = require("g_WRAP");
g_WRAP = __toESM(g_WRAP);
let h_WRAP = require("h_WRAP");
h_WRAP = __toESM(h_WRAP);
let i_WRAP = require("i_WRAP");
i_WRAP = __toESM(i_WRAP);
let j_WRAP = require("j_WRAP");
j_WRAP = __toESM(j_WRAP);

//#region entry.js
(0, b_nowrap.b)();
x = d_WRAP.x;
(0, e_WRAP.default)();
(0, f_WRAP.default)();
(0, g_WRAP.__esModule)();
x = h_WRAP;
i_WRAP.x();
j_WRAP.x``;
x = import("k_WRAP");

//#endregion

var c_nowrap = require("c_nowrap");
Object.keys(c_nowrap).forEach(function (k) {
  if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {
    enumerable: true,
    get: function () { return c_nowrap[k]; }
  });
});

```
