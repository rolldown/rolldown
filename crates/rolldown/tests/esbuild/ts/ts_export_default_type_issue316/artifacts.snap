---
source: crates/rolldown_testing/src/integration_test.rs
---
# warnings

## MISSING_EXPORT

```text
[MISSING_EXPORT] Warning: "default" is not exported by "keep/declare-class.ts".
   ╭─[ entry.ts:1:8 ]
   │
 1 │ import dc_def, { bar as dc } from './keep/declare-class'
   │        ───┬──  
   │           ╰──── Missing export
   │ 
   │ Note: This diagnostic might be a false positive when importing from TypeScript files. TypeScript type-only exports and imports are stripped during transformation, which may cause actual
   │         exports to appear missing.
───╯

```
## MISSING_EXPORT

```text
[MISSING_EXPORT] Warning: "default" is not exported by "keep/declare-let.ts".
   ╭─[ entry.ts:2:8 ]
   │
 2 │ import dl_def, { bar as dl } from './keep/declare-let'
   │        ───┬──  
   │           ╰──── Missing export
   │ 
   │ Note: This diagnostic might be a false positive when importing from TypeScript files. TypeScript type-only exports and imports are stripped during transformation, which may cause actual
   │         exports to appear missing.
───╯

```
# Assets

## entry.js

```js
//#region keep/declare-class.ts
let bar = 123;

//#endregion
//#region keep/declare-let.ts
let bar$1 = 123;

//#endregion
//#region keep/interface-merged.ts
var foo$3 = class foo$3 {
	static x = new foo$3();
};
var interface_merged_default = foo$3;
let bar$2 = 123;

//#endregion
//#region keep/interface-nested.ts
var interface_nested_default = foo;
let bar$3 = 123;

//#endregion
//#region keep/type-nested.ts
var type_nested_default = foo;
let bar$4 = 123;

//#endregion
//#region keep/value-namespace.ts
let foo$2;
(function(_foo) {
	_foo.num = 0;
})(foo$2 || (foo$2 = {}));
var value_namespace_default = foo$2;
let bar$5 = 123;

//#endregion
//#region keep/value-namespace-merged.ts
let foo$1;
(function(_foo) {
	_foo.num = 0;
})(foo$1 || (foo$1 = {}));
var value_namespace_merged_default = foo$1;
let bar$6 = 123;

//#endregion
//#region remove/interface.ts
let bar$7 = 123;

//#endregion
//#region remove/interface-exported.ts
let bar$8 = 123;

//#endregion
//#region remove/type.ts
let bar$9 = 123;

//#endregion
//#region remove/type-exported.ts
let bar$10 = 123;

//#endregion
//#region remove/type-only-namespace.ts
let bar$11 = 123;

//#endregion
//#region remove/type-only-namespace-exported.ts
let bar$12 = 123;

//#endregion
//#region entry.ts
var entry_default = [
	dc_def,
	bar,
	dl_def,
	bar$1,
	interface_merged_default,
	bar$2,
	interface_nested_default,
	bar$3,
	type_nested_default,
	bar$4,
	value_namespace_default,
	bar$5,
	value_namespace_merged_default,
	bar$6,
	bar$7,
	bar$8,
	bar$9,
	bar$10,
	bar$11,
	bar$12
];

//#endregion
export { entry_default as default };
```
