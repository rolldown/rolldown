---
source: crates/rolldown_testing/src/integration_test.rs
---
# Assets

## entry.js

```js

//#region keep/declare-class.ts
var declare_class_default = foo;
let bar$12 = 123;

//#endregion
//#region keep/declare-let.ts
var declare_let_default = foo;
let bar$11 = 123;

//#endregion
//#region keep/interface-merged.ts
class foo$3 {
	static x = new foo$3();
}
var interface_merged_default = foo$3;
let bar$10 = 123;

//#endregion
//#region keep/interface-nested.ts
var interface_nested_default = foo;
let bar$9 = 123;

//#endregion
//#region keep/type-nested.ts
var type_nested_default = foo;
let bar$8 = 123;

//#endregion
//#region keep/value-namespace.ts
let foo$2;
(function(_foo) {
	let num = _foo.num = 0;
})(foo$2 || (foo$2 = {}));
var value_namespace_default = foo$2;
let bar$7 = 123;

//#endregion
//#region keep/value-namespace-merged.ts
let foo$1;
(function(_foo2) {
	let num = _foo2.num = 0;
})(foo$1 || (foo$1 = {}));
var value_namespace_merged_default = foo$1;
let bar$6 = 123;

//#endregion
//#region remove/interface.ts
var interface_default = foo;
let bar$5 = 123;

//#endregion
//#region remove/interface-exported.ts
var interface_exported_default = foo;
let bar$4 = 123;

//#endregion
//#region remove/type.ts
var type_default = foo;
let bar$3 = 123;

//#endregion
//#region remove/type-exported.ts
var type_exported_default = foo;
let bar$2 = 123;

//#endregion
//#region remove/type-only-namespace.ts
var type_only_namespace_default = foo;
let bar$1 = 123;

//#endregion
//#region remove/type-only-namespace-exported.ts
var type_only_namespace_exported_default = foo;
let bar = 123;

//#endregion
//#region entry.ts
var entry_default = [
	declare_class_default,
	bar$12,
	declare_let_default,
	bar$11,
	interface_merged_default,
	bar$10,
	interface_nested_default,
	bar$9,
	type_nested_default,
	bar$8,
	value_namespace_default,
	bar$7,
	value_namespace_merged_default,
	bar$6,
	bar$5,
	bar$4,
	bar$3,
	bar$2,
	bar$1,
	bar
];

//#endregion
export { entry_default as default };
```
