---
source: crates/rolldown_testing/src/integration_test.rs
---
# Assets

## nested-number.js

```js

//#region nested-number.ts
let foo;
(function(_foo) {
	let x$1 = function(x$2) {
		x$2[x$2["y"] = 0] = "y";
		x$2[x$2["yy"] = 0] = "yy";
		return x$2;
	}({});
	_foo.x = x$1;
})(foo || (foo = {}));
(function(_foo2) {
	x = function(x$1) {
		x$1[x$1["z"] = 1] = "z";
		return x$1;
	}(x || {});
	_foo2.x = x;
})(foo || (foo = {}));
(function(_foo3) {
	let x$1;
	(function(_x) {
		console.log(y, z);
		console.log(x$1.y, x$1.z);
	})(x$1 || (x$1 = _foo3.x || (_foo3.x = {})));
})(foo || (foo = {}));

//#endregion
export { foo };
```
## nested-propagation.js

```js

//#region nested-propagation.ts
let n;
(function(_n) {
	let a$1 = function(a$2) {
		a$2[a$2["b"] = 100] = "b";
		return a$2;
	}({});
	_n.a = a$1;
})(n || (n = {}));
(function(_n2) {
	let x$1 = function(x$2) {
		x$2[x$2["c"] = n.a.b] = "c";
		x$2[x$2["d"] = x$2.c * 2] = "d";
		x$2[x$2["e"] = x$2.d ** 2] = "e";
		x$2[x$2["f"] = x$2["e"] / 4] = "f";
		return x$2;
	}({});
	_n2.x = x$1;
})(n || (n = {}));
(function(_n3) {
	x = function(x$1) {
		x$1[x$1["g"] = x$1.f >> 4] = "g";
		return x$1;
	}(x || {});
	_n3.x = x;
	console.log(a.b, n.a.b, n["a"]["b"], x.g, n.x.g, n["x"]["g"]);
})(n || (n = {}));

//#endregion
export { n };
```
## nested-string.js

```js

//#region nested-string.ts
let foo;
(function(_foo) {
	let x$1 = function(x$2) {
		x$2["y"] = "a";
		x$2["yy"] = "a";
		return x$2;
	}({});
	_foo.x = x$1;
})(foo || (foo = {}));
(function(_foo2) {
	x = function(x$1) {
		x$1["z"] = "a";
		return x$1;
	}(x || {});
	_foo2.x = x;
})(foo || (foo = {}));
(function(_foo3) {
	let x$1;
	(function(_x) {
		console.log(y, z);
		console.log(x$1.y, x$1.z);
	})(x$1 || (x$1 = _foo3.x || (_foo3.x = {})));
})(foo || (foo = {}));

//#endregion
export { foo };
```
## number.js

```js

//#region number.ts
let x = function(x$1) {
	x$1[x$1["y"] = 0] = "y";
	x$1[x$1["yy"] = 0] = "yy";
	return x$1;
}({});
x = function(x$1) {
	x$1[x$1["z"] = 1] = "z";
	return x$1;
}(x || {});
(function(_x) {
	console.log(y, z);
})(x || (x = {}));
console.log(x.y, x.z);

//#endregion
export { x };
```
## propagation.js

```js

//#region propagation.ts
let a = function(a$1) {
	a$1[a$1["b"] = 100] = "b";
	return a$1;
}({});
let x = function(x$1) {
	x$1[x$1["c"] = 100] = "c";
	x$1[x$1["d"] = 200] = "d";
	x$1[x$1["e"] = x$1.d ** 2] = "e";
	x$1[x$1["f"] = x$1["e"] / 4] = "f";
	return x$1;
}({});
x = function(x$1) {
	x$1[x$1["g"] = x$1.f >> 4] = "g";
	return x$1;
}(x || {});
console.log(a.b, a["b"], x.g, x["g"]);

//#endregion
export { a, x };
```
## string.js

```js

//#region string.ts
let x = function(x$1) {
	x$1["y"] = "a";
	x$1["yy"] = "a";
	return x$1;
}({});
x = function(x$1) {
	x$1["z"] = "a";
	return x$1;
}(x || {});
(function(_x) {
	console.log(y, z);
})(x || (x = {}));
console.log(x.y, x.z);

//#endregion
export { x };
```
