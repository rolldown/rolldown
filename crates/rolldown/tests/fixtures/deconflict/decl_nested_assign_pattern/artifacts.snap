---
source: crates/rolldown/tests/common/case.rs
expression: content
input_file: crates/rolldown/tests/fixtures/deconflict/decl_nested_assign_pattern
---
# Assets

## main.mjs

```js
import { default as assert } from "assert";

// names.js
const {foo:{bar:{baz=''}={}}={}} = {
	foo:{
		bar:{
			baz:'baz2'
		}
	}
};

// main.js
const {foo:{bar:{baz:baz$1=''}={}}={}} = {
	foo:{
		bar:{
			baz:'baz'
		}
	}
};
assert.strictEqual(baz$1, 'baz');
assert.strictEqual(baz, 'baz2');

export { baz$1 as baz, baz as baz2 };
//# sourceMappingURL=main.mjs.map
```

# Sourcemap Visualizer

- names.js
(0:7-0:13) "const " --> (3:0-3:6) "\nconst"
(0:13-0:15) "{ " --> (3:6-3:7) " "
(0:15-0:20) "foo: " --> (3:7-3:11) "{foo"
(0:20-0:22) "{ " --> (3:11-3:12) ":"
(0:22-0:27) "bar: " --> (3:12-3:16) "{bar"
(0:27-0:29) "{ " --> (3:16-3:17) ":"
(0:29-0:35) "baz = " --> (3:17-3:21) "{baz"
(0:35-0:39) "'' }" --> (3:21-3:24) "=''"
(0:39-0:42) " = " --> (3:24-3:25) "}"
(0:42-0:44) "{}" --> (3:25-3:27) "={"
(0:44-0:46) " }" --> (3:27-3:28) "}"
(0:46-0:49) " = " --> (3:28-3:29) "}"
(0:49-0:51) "{}" --> (3:29-3:31) "={"
(0:51-0:53) " }" --> (3:31-3:32) "}"
(0:53-0:56) " = " --> (3:32-3:35) "} ="
(0:56-0:58) "{ " --> (3:35-4:1) " {\n"
(0:58-0:63) "foo: " --> (4:1-4:5) "\tfoo"
(0:63-0:65) "{ " --> (4:5-5:2) ":{\n\t"
(0:65-0:70) "bar: " --> (5:2-5:6) "\tbar"
(0:70-0:72) "{ " --> (5:6-6:3) ":{\n\t\t"
(0:72-0:77) "baz: " --> (6:3-6:7) "\tbaz"
(0:77-0:85) "'baz2' }" --> (6:7-7:3) ":'baz2'\n\t\t"
(0:85-0:87) " }" --> (7:3-8:2) "}\n\t"
(0:87-0:89) " }" --> (8:2-9:1) "}\n"
(0:89-2:1) "\n\n" --> (9:1-12:0) "};\n\n// main.js"
- main.js
(2:7-2:13) " const" --> (12:0-12:6) "\nconst"
(2:13-2:15) " {" --> (12:6-12:7) " "
(2:15-2:20) " foo:" --> (12:7-12:11) "{foo"
(2:20-2:22) " {" --> (12:11-12:12) ":"
(2:22-2:27) " bar:" --> (12:12-12:16) "{bar"
(2:27-2:29) " {" --> (12:16-12:17) ":"
(2:29-2:35) " baz =" --> (12:17-12:27) "{baz:baz$1"
(2:35-2:39) " '' " --> (12:27-12:30) "=''"
(2:39-2:42) "} =" --> (12:30-12:31) "}"
(2:42-2:44) " {" --> (12:31-12:33) "={"
(2:44-2:46) "} " --> (12:33-12:34) "}"
(2:46-2:49) "} =" --> (12:34-12:35) "}"
(2:49-2:51) " {" --> (12:35-12:37) "={"
(2:51-2:53) "} " --> (12:37-12:38) "}"
(2:53-2:56) "} =" --> (12:38-12:41) "} ="
(2:56-2:58) " {" --> (12:41-13:1) " {\n"
(2:58-2:63) " foo:" --> (13:1-13:5) "\tfoo"
(2:63-2:65) " {" --> (13:5-14:2) ":{\n\t"
(2:65-2:70) " bar:" --> (14:2-14:6) "\tbar"
(2:70-2:72) " {" --> (14:6-15:3) ":{\n\t\t"
(2:72-2:77) " baz:" --> (15:3-15:7) "\tbaz"
(2:77-2:84) " 'baz' " --> (15:7-16:3) ":'baz'\n\t\t"
(2:84-2:86) "} " --> (16:3-17:2) "}\n\t"
(2:86-2:88) "} " --> (17:2-18:1) "}\n"
(2:88-3:0) "}" --> (18:1-19:0) "};"
(3:0-3:7) "\nassert" --> (19:0-19:7) "\nassert"
(3:7-3:19) ".strictEqual" --> (19:7-19:19) ".strictEqual"
(3:19-3:24) "(baz," --> (19:19-19:26) "(baz$1,"
(3:24-3:30) " 'baz'" --> (19:26-19:32) " 'baz'"
(3:30-4:0) ")" --> (19:32-20:0) ");"
(4:0-4:7) "\nassert" --> (20:0-20:7) "\nassert"
(4:7-4:19) ".strictEqual" --> (20:7-20:19) ".strictEqual"
(4:19-4:25) "(baz2," --> (20:19-20:24) "(baz,"
(4:25-4:32) " 'baz2'" --> (20:24-20:31) " 'baz2'"
(4:32-7:1) ")\n\nexport { baz, baz2 }\n" --> (20:31-23:34) ");\n\nexport { baz$1 as baz, baz as baz2 };\n//# sourceMappingURL=main.mjs.map"
