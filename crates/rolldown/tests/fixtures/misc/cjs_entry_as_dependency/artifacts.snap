---
source: crates/rolldown/tests/common/case.rs
expression: content
input_file: crates/rolldown/tests/fixtures/misc/cjs_entry_as_dependency
---
# Assets

## 2.mjs

```js
// <runtime>

var __create = Object.create
var __defProp = Object.defineProperty
var __getOwnPropDesc = Object.getOwnPropertyDescriptor
var __getOwnPropNames = Object.getOwnPropertyNames
var __getProtoOf = Object.getPrototypeOf
var __hasOwnProp = Object.prototype.hasOwnProperty
var __commonJS = (cb, mod) => function () {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports
}
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === 'object' || typeof from === 'function')
    for (var keys = __getOwnPropNames(from), i = 0, n = keys.length, key; i < n; i++) {
      key = keys[i]
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: (k => from[k]).bind(null, key), enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable })
    }
  return to
}
var __toESM = (mod, isNodeMode, target) => (
  target = mod != null ? __create(__getProtoOf(mod)) : {},
  __copyProps(
    isNodeMode || !mod || !mod.__esModule
      ? __defProp(target, 'default', { value: mod, enumerable: true })
      : target,
    mod)
)

// main2.js
var require_main2 = __commonJS({
	'main2.js'(exports, module) {
		module.exports = {}

	}
});
export { __commonJS, __toESM, require_main2 };
```
## main.mjs

```js
import { __commonJS, __toESM, require_main2 } from "./2.mjs";

// main.js
var require_main = __commonJS({
	'main.js'(exports, module) {
		var import_main2 = __toESM(require_main2());

		module.exports = import_main2.default


	}
});
export default require_main();
```
## main2.mjs

```js
import { require_main2 } from "./2.mjs";

export default require_main2();
```
