---
source: crates/rolldown/tests/common/case.rs
expression: content
input_file: crates/rolldown/tests/fixtures/misc/wrapped_esm
---
# Assets

## main.mjs

```js


//#region foo.js
function foo() {
}
var foo_ns, a, b, c, bar, baz;
var init_foo = __esmMin(() => {
	foo_ns = {};
	__export(foo_ns, {
		a:() => a,
		b:() => b,
		bar:() => bar,
		c:() => c,
		default:() => baz,
		foo:() => foo
	});
	[b] = [],[c=1] = [];
	bar = class {
	};
	baz = class {
	};
});

//#endregion
//#region main.js
init_foo(),__toCommonJS(foo_ns);

//#endregion
//# sourceMappingURL=main.mjs.map
```

# Sourcemap Visualizer

- ../foo.js
(1:7-1:16) " function" --> (31:0-31:9) "\nfunction"
(1:16-1:22) " foo()" --> (31:9-31:15) " foo()"
(1:22-1:25) " { " --> (31:15-32:0) " {"
(1:25-2:7) "}\nexport" --> (32:0-45:1) "\n}\nvar foo_ns, a, b, c, bar, baz;\nvar init_foo = __esmMin(() => {\n\tfoo_ns = {};\n\t__export(foo_ns, {\n\t\ta:() => a,\n\t\tb:() => b,\n\t\tbar:() => bar,\n\t\tc:() => c,\n\t\tdefault:() => baz,\n\t\tfoo:() => foo\n\t});\n\t[b] = [],[c=1] = [];\n"
(2:7-2:17) " class bar" --> (45:1-45:13) "\tbar = class"
(2:17-2:20) " { " --> (45:13-46:1) " {\n"
(2:20-3:15) "}\nexport default" --> (46:1-47:1) "\t};\n"
(3:15-3:25) " class baz" --> (47:1-47:13) "\tbaz = class"
(3:25-3:28) " { " --> (47:13-48:1) " {\n"
(3:28-7:1) "}\n\n\nexport { }\n" --> (48:1-53:0) "\t};\n});\n\n//#endregion\n//#region main.js"
(0:0-1:1) "require('./foo')\n" --> (53:0-56:34) "\ninit_foo(),__toCommonJS(foo_ns);\n\n//#endregion\n//# sourceMappingURL=main.mjs.map"
