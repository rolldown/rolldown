---
source: crates/rolldown/tests/common/case.rs
expression: content
input_file: crates/rolldown/tests/fixtures/misc/wrapped_esm
---
# Assets

## main.mjs

```js


//#region foo.js
function foo() {}
var foo_ns, a, b, c, bar, baz;
var init_foo = __esmMin(() => {
	foo_ns = {};
	__export(foo_ns, {
		a: () => a,
		b: () => b,
		bar: () => bar,
		c: () => c,
		default: () => baz,
		foo: () => foo
	});
	[b] = [], [c = 1] = [];
	bar = class {};
	baz = class {};
});

//#endregion
//#region main.js
init_foo(), __toCommonJS(foo_ns);

//#endregion
//# sourceMappingURL=main.mjs.map
```

# Sourcemap Visualizer

- ../foo.js
(1:7-1:16) " function" --> (27:0-27:9) "\nfunction"
(1:16-1:22) " foo()" --> (27:9-27:15) " foo()"
(1:22-1:25) " { " --> (27:15-27:16) " "
(1:25-2:7) "}\nexport" --> (27:16-40:1) "{}\nvar foo_ns, a, b, c, bar, baz;\nvar init_foo = __esmMin(() => {\n\tfoo_ns = {};\n\t__export(foo_ns, {\n\t\ta: () => a,\n\t\tb: () => b,\n\t\tbar: () => bar,\n\t\tc: () => c,\n\t\tdefault: () => baz,\n\t\tfoo: () => foo\n\t});\n\t[b] = [], [c = 1] = [];\n"
(2:7-2:17) " class bar" --> (40:1-40:13) "\tbar = class"
(2:17-2:20) " { " --> (40:13-40:14) " "
(2:20-3:15) "}\nexport default" --> (40:14-41:1) "{};\n"
(3:15-3:25) " class baz" --> (41:1-41:13) "\tbaz = class"
(3:25-3:28) " { " --> (41:13-41:14) " "
(3:28-7:1) "}\n\n\nexport { }\n" --> (41:14-46:0) "{};\n});\n\n//#endregion\n//#region main.js"
(0:0-1:1) "require('./foo')\n" --> (46:0-49:34) "\ninit_foo(), __toCommonJS(foo_ns);\n\n//#endregion\n//# sourceMappingURL=main.mjs.map"
