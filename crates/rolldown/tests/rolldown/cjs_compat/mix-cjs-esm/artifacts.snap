---
source: crates/rolldown_testing/src/integration_test.rs
---
# warnings

## COMMONJS_VARIABLE_IN_ESM

```text
[COMMONJS_VARIABLE_IN_ESM] Warning: The CommonJS `module` variable is treated as a global variable in an ECMAScript module and may not work as expected
   ╭─[ esm-export-cjs-export.js:1:1 ]
   │
 1 │ module.exports = 1;
   │ ───┬──  
   │    ╰──── 
 2 │ export const value = 1;
   │ ───┬──  
   │    ╰──── This file is considered to be an ECMAScript module because of the `export` keyword here:
───╯

```

# Assets

## main.js

```js
import assert from "node:assert";

// HIDDEN [rolldown:runtime]
//#region esm-export-cjs-export.js
module.exports = 1;

//#endregion
//#region foo.js
var require_foo = /* @__PURE__ */ __commonJS({ "foo.js": (() => {}) });

//#endregion
//#region esm-export-cjs-require.js
require_foo();

//#endregion
//#region esm-import-cjs-export.js
var require_esm_import_cjs_export = /* @__PURE__ */ __commonJS({ "esm-import-cjs-export.js": ((exports, module) => {
	module.exports = 1;
}) });

//#endregion
//#region cjs.js
var require_cjs = /* @__PURE__ */ __commonJS({ "cjs.js": ((exports, module) => {
	module.exports = 1;
}) });

//#endregion
//#region esm-import-cjs-require.js
var import_esm_import_cjs_export = /* @__PURE__ */ __toESM(require_esm_import_cjs_export());
var import_cjs = /* @__PURE__ */ __toESM(require_cjs());
require_foo();
assert.equal(import_cjs.a, void 0);

//#endregion
//# sourceMappingURL=main.js.map
```

# Sourcemap Visualizer

```
- ../esm-export-cjs-export.js
(0:0) "module." --> (33:0) "module."
(0:7) "exports = " --> (33:7) "exports = "
(0:17) "1;\n" --> (33:17) "1;\n"
- ../esm-import-cjs-export.js
(1:0) "module." --> (46:0) "\tmodule."
(1:7) "exports = " --> (46:8) "exports = "
(1:17) "1" --> (46:18) "1;\n"
- ../cjs.js
(0:0) "module." --> (52:0) "\tmodule."
(0:7) "exports = " --> (52:8) "exports = "
(0:17) "1;" --> (52:18) "1;\n"
- ../esm-import-cjs-require.js
(3:0) "assert.equal(a, undefined)\n" --> (60:0) "assert.equal(import_cjs.a, void 0);\n"
```
