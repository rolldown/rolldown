---
source: crates/rolldown_testing/src/integration_test.rs
---
# Assets

## chunk.js

```js
"use strict";
//#region rolldown:runtime
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = (fn, res) => function() {
	return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __export = (target, all) => {
	for (var name in all) __defProp(target, name, {
		get: all[name],
		enumerable: true
	});
};
var __copyProps = (to, from, except, desc) => {
	if (from && typeof from === "object" || typeof from === "function") for (var keys = __getOwnPropNames(from), i = 0, n = keys.length, key; i < n; i++) {
		key = keys[i];
		if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
			get: ((k) => from[k]).bind(null, key),
			enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
		});
	}
	return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", {
	value: mod,
	enumerable: true
}) : target, mod));


Object.defineProperty(exports, '__esm', {
  enumerable: true,
  get: function () {
    return __esm;
  }
});
Object.defineProperty(exports, '__export', {
  enumerable: true,
  get: function () {
    return __export;
  }
});
Object.defineProperty(exports, '__toESM', {
  enumerable: true,
  get: function () {
    return __toESM;
  }
});
```
## main1.js

```js
const require_chunk = require('./chunk.js');
require("node:assert");

```
## main2.js

```js
const require_chunk = require('./chunk.js');

//#region esm.js
var esm_exports = {};
require_chunk.__export(esm_exports, { share: () => share });
function share() {
	return 1;
}
var init_esm = require_chunk.__esm({ "esm.js"() {} });

//#region main2.js
init_esm();

```
