---
source: crates/rolldown_testing/src/integration_test.rs
---
# Assets

## main.js

```js

//#region rolldown:runtime
var __getOwnPropNames = Object.getOwnPropertyNames;
var __commonJS = (cb, mod) => function() {
	return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};

//#region main.js
var require_main = __commonJS({ "main.js"() {
	require_main();
} });

export default require_main();

```
---

Variant: (format: Cjs)

# Assets

## main.js

```js
//#region rolldown:runtime
var __getOwnPropNames = Object.getOwnPropertyNames;
var __commonJS = (cb, mod) => function() {
	return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};


//#region main.js
var require_main = __commonJS({ "main.js"() {
	require_main();
} });

module.exports = require_main();

```
---

Variant: (extend: true, format: Iife, name: "module")

# Assets

## main.js

```js
this.module = (function() {

//#region rolldown:runtime
var __getOwnPropNames = Object.getOwnPropertyNames;
var __commonJS = (cb, mod) => function() {
	return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};


//#region main.js
var require_main = __commonJS({ "main.js"() {
	require_main();
} });

return require_main();

})();
```
---

Variant: (extend: true, format: Umd, name: "module")

# Assets

## main.js

```js
(function(global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports =  factory() :
  typeof define === 'function' && define.amd ? define([], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.module = factory()));
})(this, function() {
//#region rolldown:runtime
var __getOwnPropNames = Object.getOwnPropertyNames;
var __commonJS = (cb, mod) => function() {
	return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};


//#region main.js
var require_main = __commonJS({ "main.js"() {
	require_main();
} });

return require_main();

});
```
