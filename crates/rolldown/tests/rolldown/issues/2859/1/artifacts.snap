---
source: crates/rolldown_testing/src/integration_test.rs
---
# Assets

## lib.js

```js

//#region lib.js
const foo = "foo";
let bar = "";
bar = "bar";
var lib_default = "default";

export { bar, lib_default as default, foo };
```
## main.js

```js
import assert from "assert";

//#region main.js
import("./lib.js").then((exports) => assert.deepStrictEqual({ ...exports }, {
	foo: "foo",
	bar: "bar",
	default: "default"
}));

```
---

Variant: (format: Cjs)

# Assets

## lib.js

```js
"use strict";

//#region lib.js
const foo = "foo";
let bar = "";
bar = "bar";
var lib_default = "default";

Object.defineProperty(exports, 'bar', {
  enumerable: true,
  get: function () {
    return bar;
  }
});
exports.default = lib_default
exports.foo = foo
```
## main.js

```js
"use strict";
//#region rolldown:runtime
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc) => {
	if (from && typeof from === "object" || typeof from === "function") for (var keys = __getOwnPropNames(from), i = 0, n = keys.length, key; i < n; i++) {
		key = keys[i];
		if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
			get: ((k) => from[k]).bind(null, key),
			enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
		});
	}
	return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", {
	value: mod,
	enumerable: true
}) : target, mod));

const assert = __toESM(require("assert"));

//#region main.js
Promise.resolve().then(function() {
	return require("./lib.js");
}).then((exports$1) => assert.default.deepStrictEqual({ ...exports$1 }, {
	foo: "foo",
	bar: "bar",
	default: "default"
}));

```
