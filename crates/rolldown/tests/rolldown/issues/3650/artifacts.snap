---
source: crates/rolldown_testing/src/integration_test.rs
---
# warnings

## INVALID_OPTION

```text
[INVALID_OPTION] Warning: `preserveEntrySignatures: 'allow-extension'` is set implicitly by Rolldown

- `advancedChunks.includeDependenciesRecursively = false` requires `preserveEntrySignatures` to be either `false` or 'allow-extension'

To fix:

- Set `preserveEntrySignatures` either to `false` or 'allow-extension' in your config

```

# Assets

## first.js

```js
import { n as __export, t as __esm } from "./rolldown-runtime.js";
import { r as value, t as init_second } from "./second.js";

//#region first.js
var first_exports = /* @__PURE__ */ __export({ value: () => value$1 });
var value$1;
var init_first = __esm({ "first.js": (() => {
	init_second();
	value$1 = "first" + value;
}) });

//#endregion
export { init_first as n, value$1 as r, first_exports as t };
```

## main.js

```js
import { t as __esm } from "./rolldown-runtime.js";
import { n as second_exports, t as init_second } from "./second.js";
import { n as init_first, t as first_exports } from "./first.js";

//#region main.js
var init_main = __esm({ "main.js": (() => {
	init_first();
	init_second();
	console.log(first_exports, second_exports);
}) });

//#endregion
init_main();
```

## rolldown-runtime.js

```js
// HIDDEN [rolldown:runtime]
export { __export as n, __esm as t };
```

## second.js

```js
import { n as __export, t as __esm } from "./rolldown-runtime.js";
import { n as init_first, r as value } from "./first.js";

//#region second.js
var second_exports = /* @__PURE__ */ __export({ value: () => value$1 });
var value$1;
var init_second = __esm({ "second.js": (() => {
	init_first();
	value$1 = "second" + value;
}) });

//#endregion
export { second_exports as n, value$1 as r, init_second as t };
```
