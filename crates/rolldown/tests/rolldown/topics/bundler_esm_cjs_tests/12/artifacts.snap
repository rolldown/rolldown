---
source: crates/rolldown_testing/src/integration_test.rs
---
# warnings

## IMPORT_IS_UNDEFINED

```text
[IMPORT_IS_UNDEFINED] Warning: Import `__esModule` will always be undefined because there is no matching export in 'foo.js'
   ╭─[ entry.js:5:23 ]
   │
 5 │   foo2.bar === 123 && foo2.__esModule === void 0 &&
   │                       ───────┬───────  
   │                              ╰───────── 
───╯

```
# Assets

## entry.js

```js
import { __toCommonJS, bar, foo_exports, init_foo } from "./foo.js";

//#region entry.js
init_foo();
const foo = (init_foo(), __toCommonJS(foo_exports));
input.works = import("./foo2.js").then((foo3) => foo.bar === 123 && foo.__esModule === true && bar === 123 && void 0 === void 0 && foo3.bar === 123 && foo3.__esModule === void 0);

```
## foo.js

```js

//#region rolldown:runtime
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = (fn, res) => function() {
	return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __export = (target, all) => {
	for (var name in all) __defProp(target, name, {
		get: all[name],
		enumerable: true
	});
};
var __copyProps = (to, from, except, desc) => {
	if (from && typeof from === "object" || typeof from === "function") for (var keys = __getOwnPropNames(from), i = 0, n = keys.length, key; i < n; i++) {
		key = keys[i];
		if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
			get: ((k) => from[k]).bind(null, key),
			enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
		});
	}
	return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

//#region foo.js
var foo_exports = {};
__export(foo_exports, { bar: () => bar });
var bar;
var init_foo = __esm({ "foo.js"() {
	bar = 123;
} });

export { __toCommonJS, bar, foo_exports, init_foo };
```
## foo2.js

```js
import { bar, init_foo } from "./foo.js";

init_foo();
export { bar };
```
---

Variant: (format: Cjs)

# warnings

## IMPORT_IS_UNDEFINED

```text
[IMPORT_IS_UNDEFINED] Warning: Import `__esModule` will always be undefined because there is no matching export in 'foo.js'
   ╭─[ entry.js:5:23 ]
   │
 5 │   foo2.bar === 123 && foo2.__esModule === void 0 &&
   │                       ───────┬───────  
   │                              ╰───────── 
───╯

```
# Assets

## entry.js

```js
"use strict";
const require_foo = require('./foo.js');

//#region entry.js
require_foo.init_foo();
const foo = (require_foo.init_foo(), require_foo.__toCommonJS(require_foo.foo_exports));
input.works = Promise.resolve().then(function() {
	return require("./foo2.js");
}).then((foo3) => foo.bar === 123 && foo.__esModule === true && require_foo.bar === 123 && void 0 === void 0 && foo3.bar === 123 && foo3.__esModule === void 0);

```
## foo.js

```js
"use strict";
//#region rolldown:runtime
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = (fn, res) => function() {
	return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __export = (target, all) => {
	for (var name in all) __defProp(target, name, {
		get: all[name],
		enumerable: true
	});
};
var __copyProps = (to, from, except, desc) => {
	if (from && typeof from === "object" || typeof from === "function") for (var keys = __getOwnPropNames(from), i = 0, n = keys.length, key; i < n; i++) {
		key = keys[i];
		if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
			get: ((k) => from[k]).bind(null, key),
			enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
		});
	}
	return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);


//#region foo.js
var foo_exports = {};
__export(foo_exports, { bar: () => bar });
var bar;
var init_foo = __esm({ "foo.js"() {
	bar = 123;
} });

Object.defineProperty(exports, '__toCommonJS', {
  enumerable: true,
  get: function () {
    return __toCommonJS;
  }
});
Object.defineProperty(exports, 'bar', {
  enumerable: true,
  get: function () {
    return bar;
  }
});
Object.defineProperty(exports, 'foo_exports', {
  enumerable: true,
  get: function () {
    return foo_exports;
  }
});
Object.defineProperty(exports, 'init_foo', {
  enumerable: true,
  get: function () {
    return init_foo;
  }
});
```
## foo2.js

```js
const require_foo = require('./foo.js');

require_foo.init_foo();
exports.bar = require_foo.bar
```
---

Variant: (format: Iife)

# warnings

## IMPORT_IS_UNDEFINED

```text
[IMPORT_IS_UNDEFINED] Warning: Import `__esModule` will always be undefined because there is no matching export in 'foo.js'
   ╭─[ entry.js:5:23 ]
   │
 5 │   foo2.bar === 123 && foo2.__esModule === void 0 &&
   │                       ───────┬───────  
   │                              ╰───────── 
───╯

```
# Assets

## entry.js

```js
(function() {

"use strict";
//#region rolldown:runtime
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = (fn, res) => function() {
	return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __export = (target, all) => {
	for (var name in all) __defProp(target, name, {
		get: all[name],
		enumerable: true
	});
};
var __copyProps = (to, from, except, desc) => {
	if (from && typeof from === "object" || typeof from === "function") for (var keys = __getOwnPropNames(from), i = 0, n = keys.length, key; i < n; i++) {
		key = keys[i];
		if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
			get: ((k) => from[k]).bind(null, key),
			enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
		});
	}
	return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);


//#region foo.js
var foo_exports = {};
__export(foo_exports, { bar: () => bar });
var bar;
var init_foo = __esm({ "foo.js"() {
	bar = 123;
} });

//#region entry.js
init_foo();
const foo = (init_foo(), __toCommonJS(foo_exports));
input.works = Promise.resolve().then(function() {
	return init_foo(), foo_exports;
}).then((foo3) => foo.bar === 123 && foo.__esModule === true && bar === 123 && void 0 === void 0 && foo3.bar === 123 && foo3.__esModule === void 0);

})();
```
---

Variant: (format: Umd)

# warnings

## IMPORT_IS_UNDEFINED

```text
[IMPORT_IS_UNDEFINED] Warning: Import `__esModule` will always be undefined because there is no matching export in 'foo.js'
   ╭─[ entry.js:5:23 ]
   │
 5 │   foo2.bar === 123 && foo2.__esModule === void 0 &&
   │                       ───────┬───────  
   │                              ╰───────── 
───╯

```
# Assets

## entry.js

```js
(function(factory) {
  
  typeof define === 'function' && define.amd ? define([], factory) :
  factory();
})(function() {
"use strict";
//#region rolldown:runtime
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = (fn, res) => function() {
	return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __export = (target, all) => {
	for (var name in all) __defProp(target, name, {
		get: all[name],
		enumerable: true
	});
};
var __copyProps = (to, from, except, desc) => {
	if (from && typeof from === "object" || typeof from === "function") for (var keys = __getOwnPropNames(from), i = 0, n = keys.length, key; i < n; i++) {
		key = keys[i];
		if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
			get: ((k) => from[k]).bind(null, key),
			enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
		});
	}
	return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);


//#region foo.js
var foo_exports = {};
__export(foo_exports, { bar: () => bar });
var bar;
var init_foo = __esm({ "foo.js"() {
	bar = 123;
} });

//#region entry.js
init_foo();
const foo = (init_foo(), __toCommonJS(foo_exports));
input.works = Promise.resolve().then(function() {
	return init_foo(), foo_exports;
}).then((foo3) => foo.bar === 123 && foo.__esModule === true && bar === 123 && void 0 === void 0 && foo3.bar === 123 && foo3.__esModule === void 0);

});
```
