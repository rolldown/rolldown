---
source: crates/rolldown_testing/src/integration_test.rs
---
# Assets

## main.js

```js
import assert from "assert";

//#region names.js
const [a$1, b$1, c$1, d$1, e$1] = [
	"a2",
	"b2",
	"c2",
	"d2",
	"e2"
];

//#endregion

//#region main.js
const [a, b, c, d, e] = [
	"a",
	"b",
	"c",
	"d",
	"e"
];
function foo(a$1$1, { b$1: b$1$1 }, { c$1: c$1$1 = "c$1" }, { d$1: d$1$1 } = { d$1: "d$1" }, { e$1: e$1$1 = "" } = { e$1: "e$1" }) {
	return {
		main: [
			a,
			b,
			c,
			d,
			e
		],
		names: [
			a$1,
			b$1,
			c$1,
			d$1,
			e$1
		],
		params: [
			a$1$1,
			b$1$1,
			c$1$1,
			d$1$1,
			e$1$1
		]
	};
}
const ret = foo("a$1", { b$1: "b$1" }, {}, void 0, void 0);
assert.deepStrictEqual(ret.main, [
	"a",
	"b",
	"c",
	"d",
	"e"
]);
assert.deepStrictEqual(ret.names, [
	"a2",
	"b2",
	"c2",
	"d2",
	"e2"
]);
assert.deepStrictEqual(ret.params, [
	"a$1",
	"b$1",
	"c$1",
	"d$1",
	"e$1"
]);

//#endregion

export { a, b, c, d, e };
//# sourceMappingURL=main.js.map
```

# Sourcemap Visualizer

```
- ../names.js
(0:7) "const " --> (3:0) "const "
(0:13) "[" --> (3:6) "["
(0:14) "a, " --> (3:7) "a$1, "
(0:17) "b, " --> (3:12) "b$1, "
(0:20) "c, " --> (3:17) "c$1, "
(0:23) "d, " --> (3:22) "d$1, "
(0:26) "e]" --> (3:27) "e$1]"
(0:28) " = " --> (3:31) " = "
(0:31) "[" --> (3:34) "[\n"
(0:32) "'a2', " --> (4:1) "\"a2\",\n"
(0:38) "'b2', " --> (5:1) "\"b2\",\n"
(0:44) "'c2', " --> (6:1) "\"c2\",\n"
(0:50) "'d2', " --> (7:1) "\"d2\",\n"
(0:56) "'e2']" --> (8:1) "\"e2\"\n"
(0:61) "\n" --> (9:0) "];\n"
- ../main.js
(9:7) "const " --> (14:0) "const "
(9:13) "[" --> (14:6) "["
(9:14) "a, " --> (14:7) "a, "
(9:17) "b, " --> (14:10) "b, "
(9:20) "c, " --> (14:13) "c, "
(9:23) "d, " --> (14:16) "d, "
(9:26) "e]" --> (14:19) "e]"
(9:28) " = " --> (14:21) " = "
(9:31) "[" --> (14:24) "[\n"
(9:32) "'a', " --> (15:1) "\"a\",\n"
(9:37) "'b', " --> (16:1) "\"b\",\n"
(9:42) "'c', " --> (17:1) "\"c\",\n"
(9:47) "'d', " --> (18:1) "\"d\",\n"
(9:52) "'e']" --> (19:1) "\"e\"\n"
(9:56) "\n" --> (20:0) "];\n"
(11:0) "function " --> (21:0) "function "
(11:9) "foo(" --> (21:9) "foo("
(11:13) "a$1, " --> (21:13) "a$1$1, "
(11:18) "{ " --> (21:20) "{ "
(11:20) "b$1 }" --> (21:22) "b$1: b$1$1 }"
(11:25) ", " --> (21:34) ", "
(11:27) "{ " --> (21:36) "{ "
(11:29) "c$1 = " --> (21:38) "c$1: c$1$1 = "
(11:35) "'c$1' }" --> (21:51) "\"c$1\" }"
(11:42) ", " --> (21:58) ", "
(11:44) "{ " --> (21:60) "{ "
(11:46) "d$1 }" --> (21:62) "d$1: d$1$1 }"
(11:51) " = " --> (21:74) " = "
(11:54) "{ " --> (21:77) "{ "
(11:56) "d$1: " --> (21:79) "d$1: "
(11:61) "'d$1' }" --> (21:84) "\"d$1\" "
(11:68) ", " --> (21:90) "}, "
(11:70) "{ " --> (21:93) "{ "
(11:72) "e$1 = " --> (21:95) "e$1: e$1$1 = "
(11:78) "'' }" --> (21:108) "\"\" }"
(11:82) " = " --> (21:112) " = "
(11:85) "{ " --> (21:115) "{ "
(11:87) "e$1: " --> (21:117) "e$1: "
(11:92) "'e$1' }" --> (21:122) "\"e$1\" "
(11:99) ") " --> (21:128) "}) "
(11:101) "{\n" --> (21:131) "{\n"
(12:2) "return " --> (22:0) "\treturn "
(12:9) "{\n" --> (22:8) "{\n"
(13:4) "main: " --> (23:2) "main: "
(13:10) "[" --> (23:8) "[\n"
(13:11) "a, " --> (24:3) "a,\n"
(13:14) "b, " --> (25:3) "b,\n"
(13:17) "c, " --> (26:3) "c,\n"
(13:20) "d, " --> (27:3) "d,\n"
(13:23) "e]" --> (28:3) "e\n"
(13:25) ",\n" --> (29:2) "],\n"
(14:4) "names: " --> (30:2) "names: "
(14:11) "[" --> (30:9) "[\n"
(14:12) "a2, " --> (31:3) "a$1,\n"
(14:16) "b2, " --> (32:3) "b$1,\n"
(14:20) "c2, " --> (33:3) "c$1,\n"
(14:24) "d2, " --> (34:3) "d$1,\n"
(14:28) "e2]" --> (35:3) "e$1\n"
(14:31) ",\n" --> (36:2) "],\n"
(15:4) "params: " --> (37:2) "params: "
(15:12) "[" --> (37:10) "[\n"
(15:13) "a$1, " --> (38:3) "a$1$1,\n"
(15:18) "b$1, " --> (39:3) "b$1$1,\n"
(15:23) "c$1, " --> (40:3) "c$1$1,\n"
(15:28) "d$1, " --> (41:3) "d$1$1,\n"
(15:33) "e$1]" --> (42:3) "e$1$1\n"
(15:37) ",\n" --> (43:2) "]\n"
(16:3) "\n" --> (44:1) "};\n"
(17:1) "\n" --> (45:0) "}\n"
(19:0) "const " --> (46:0) "const "
(19:6) "ret = " --> (46:6) "ret = "
(19:12) "foo(" --> (46:12) "foo("
(19:16) "'a$1', " --> (46:16) "\"a$1\", "
(19:23) "{ " --> (46:23) "{ "
(19:25) "b$1: " --> (46:25) "b$1: "
(19:30) "'b$1' }" --> (46:30) "\"b$1\" "
(19:37) ", " --> (46:36) "}, "
(19:39) "{}" --> (46:39) "{"
(19:41) ", undefined, undefined)" --> (46:40) "}, void 0, void 0)"
(19:64) "\n" --> (46:58) ";\n"
(20:0) "assert." --> (47:0) "assert."
(20:7) "deepStrictEqual(" --> (47:7) "deepStrictEqual("
(20:23) "ret." --> (47:23) "ret."
(20:27) "main, " --> (47:27) "main, "
(20:33) "[" --> (47:33) "[\n"
(20:34) "'a', " --> (48:1) "\"a\",\n"
(20:39) "'b', " --> (49:1) "\"b\",\n"
(20:44) "'c', " --> (50:1) "\"c\",\n"
(20:49) "'d', " --> (51:1) "\"d\",\n"
(20:54) "'e']" --> (52:1) "\"e\"\n"
(20:58) ")" --> (53:0) "])"
(20:59) "\n" --> (53:2) ";\n"
(21:0) "assert." --> (54:0) "assert."
(21:7) "deepStrictEqual(" --> (54:7) "deepStrictEqual("
(21:23) "ret." --> (54:23) "ret."
(21:27) "names, " --> (54:27) "names, "
(21:34) "[" --> (54:34) "[\n"
(21:35) "'a2', " --> (55:1) "\"a2\",\n"
(21:41) "'b2', " --> (56:1) "\"b2\",\n"
(21:47) "'c2', " --> (57:1) "\"c2\",\n"
(21:53) "'d2', " --> (58:1) "\"d2\",\n"
(21:59) "'e2']" --> (59:1) "\"e2\"\n"
(21:64) ")" --> (60:0) "])"
(21:65) "\n" --> (60:2) ";\n"
(22:0) "assert." --> (61:0) "assert."
(22:7) "deepStrictEqual(" --> (61:7) "deepStrictEqual("
(22:23) "ret." --> (61:23) "ret."
(22:27) "params, " --> (61:27) "params, "
(22:35) "[" --> (61:35) "[\n"
(22:36) "'a$1', " --> (62:1) "\"a$1\",\n"
(22:43) "'b$1', " --> (63:1) "\"b$1\",\n"
(22:50) "'c$1', " --> (64:1) "\"c$1\",\n"
(22:57) "'d$1', " --> (65:1) "\"d$1\",\n"
(22:64) "'e$1']" --> (66:1) "\"e$1\"\n"
(22:70) ")" --> (67:0) "])"
(22:71) "\n" --> (67:2) ";\n"
```
