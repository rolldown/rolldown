---
source: crates/rolldown_testing/src/integration_test.rs
---
# Assets

## main.js

```js
import assert from "assert";

//#region names.js
const { foo: { bar: { baz: baz$1 = "" } = {} } = {} } = { foo: { bar: { baz: "baz2" } } };

//#region main.js
const { foo: { bar: { baz = "" } = {} } = {} } = { foo: { bar: { baz: "baz" } } };
assert.strictEqual(baz, "baz");
assert.strictEqual(baz$1, "baz2");

export { baz, baz$1 as baz2 };
//# sourceMappingURL=main.js.map
```

# Sourcemap Visualizer

```
- ../names.js
(0:7) "const " --> (3:0) "const "
(0:13) "{ " --> (3:6) "{ "
(0:15) "foo: " --> (3:8) "foo: "
(0:20) "{ " --> (3:13) "{ "
(0:22) "bar: " --> (3:15) "bar: "
(0:27) "{ " --> (3:20) "{ "
(0:29) "baz = " --> (3:22) "baz: baz$1 = "
(0:35) "'' }" --> (3:35) "\"\" }"
(0:39) " = " --> (3:39) " = "
(0:42) "{}" --> (3:42) "{"
(0:44) " }" --> (3:43) "} }"
(0:46) " = " --> (3:46) " = "
(0:49) "{}" --> (3:49) "{"
(0:51) " }" --> (3:50) "} }"
(0:53) " = " --> (3:53) " = "
(0:56) "{ " --> (3:56) "{ "
(0:58) "foo: " --> (3:58) "foo: "
(0:63) "{ " --> (3:63) "{ "
(0:65) "bar: " --> (3:65) "bar: "
(0:70) "{ " --> (3:70) "{ "
(0:72) "baz: " --> (3:72) "baz: "
(0:77) "'baz2' }" --> (3:77) "\"baz2\" "
(0:85) " }" --> (3:84) "} "
(0:87) " }" --> (3:86) "} "
(0:89) "\n" --> (3:88) "};\n"
- ../main.js
(2:0) "const " --> (6:0) "const "
(2:6) "{ " --> (6:6) "{ "
(2:8) "foo: " --> (6:8) "foo: "
(2:13) "{ " --> (6:13) "{ "
(2:15) "bar: " --> (6:15) "bar: "
(2:20) "{ " --> (6:20) "{ "
(2:22) "baz = " --> (6:22) "baz = "
(2:28) "'' }" --> (6:28) "\"\" }"
(2:32) " = " --> (6:32) " = "
(2:35) "{}" --> (6:35) "{"
(2:37) " }" --> (6:36) "} }"
(2:39) " = " --> (6:39) " = "
(2:42) "{}" --> (6:42) "{"
(2:44) " }" --> (6:43) "} }"
(2:46) " = " --> (6:46) " = "
(2:49) "{ " --> (6:49) "{ "
(2:51) "foo: " --> (6:51) "foo: "
(2:56) "{ " --> (6:56) "{ "
(2:58) "bar: " --> (6:58) "bar: "
(2:63) "{ " --> (6:63) "{ "
(2:65) "baz: " --> (6:65) "baz: "
(2:70) "'baz' }" --> (6:70) "\"baz\" "
(2:77) " }" --> (6:76) "} "
(2:79) " }" --> (6:78) "} "
(2:81) "\n" --> (6:80) "};\n"
(3:0) "assert." --> (7:0) "assert."
(3:7) "strictEqual(" --> (7:7) "strictEqual("
(3:19) "baz, " --> (7:19) "baz, "
(3:24) "'baz')" --> (7:24) "\"baz\")"
(3:30) "\n" --> (7:30) ";\n"
(4:0) "assert." --> (8:0) "assert."
(4:7) "strictEqual(" --> (8:7) "strictEqual("
(4:19) "baz2, " --> (8:19) "baz$1, "
(4:25) "'baz2')" --> (8:26) "\"baz2\")"
(4:32) "\n" --> (8:33) ";\n"
```
