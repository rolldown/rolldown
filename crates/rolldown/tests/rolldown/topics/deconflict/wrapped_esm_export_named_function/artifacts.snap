---
source: crates/rolldown_testing/src/integration_test.rs
---
# Assets

## main.js

```js
import assert from "assert";

//#region rolldown:runtime
var __defProp = Object.defineProperty;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __esm = (fn, res) => function() {
	return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __export = (target, all) => {
	for (var name in all) __defProp(target, name, {
		get: all[name],
		enumerable: true
	});
};

//#region foo.js
var foo_exports = {};
__export(foo_exports, { foo: () => foo$1 });
function foo$1(a$1$1) {
	console.log(a$1$1, a$1);
}
var a$1;
var init_foo = __esm({ "foo.js"() {
	a$1 = 1;
} });

//#region bar.js
init_foo();
var bar_default = { foo: foo$1 };

//#region main.js
const a = 2;
const { foo } = bar_default;
assert.strictEqual(typeof foo, "function");
init_foo();

//# sourceMappingURL=main.js.map
```

# Sourcemap Visualizer

```
- ../foo.js
(2:7) "function " --> (18:0) "function "
(2:16) "foo(" --> (18:9) "foo$1("
(2:20) "a$1) " --> (18:15) "a$1$1) "
(2:25) "{\n" --> (18:22) "{\n"
(3:4) "console." --> (19:0) "\tconsole."
(3:12) "log(" --> (19:9) "log("
(3:16) "a$1, " --> (19:13) "a$1$1, "
(3:21) "a)" --> (19:20) "a$1)"
(3:23) "\n" --> (19:24) ";\n"
(4:1) [invalid] --> (20:0)
(0:6) "a = " --> (23:1) "a$1 = "
(0:10) "1;\n" --> (23:7) "1;\n"
- ../bar.js
(0:0) "import { foo } from './foo'" --> (27:0) "init_foo()"
(0:27) "\n" --> (27:10) ";\n"
(2:15) "{ " --> (28:18) "{ "
(2:17) "foo }" --> (28:20) "foo: foo$1 "
(2:22) [invalid] --> (28:31)
- ../main.js
(3:0) "const " --> (31:0) "const "
(3:6) "a = " --> (31:6) "a = "
(3:10) "2; // make foo `a` conflict\n" --> (31:10) "2;\n"
(5:0) "const " --> (32:0) "const "
(5:6) "{ " --> (32:6) "{ "
(5:8) "foo }" --> (32:8) "foo }"
(5:13) " = " --> (32:13) " = "
(5:16) "bar\n" --> (32:16) "bar_default;\n"
(7:0) "assert." --> (33:0) "assert."
(7:7) "strictEqual(typeof " --> (33:7) "strictEqual(typeof "
(7:26) "foo, " --> (33:26) "foo, "
(7:31) "'function')" --> (33:31) "\"function\")"
(7:42) "\n" --> (33:42) ";\n"
(9:0) "require('./foo')" --> (34:0) "init_foo();\n"
```
