---
source: crates/rolldown_testing/src/integration_test.rs
---
# Assets

## main.js

```js
// HIDDEN [rolldown:runtime]
// HIDDEN [rolldown:hmr]
//#region foo.mjs
var foo_exports = {};
__export(foo_exports, { foo: () => foo$1 });
const foo_hot$1 = __rolldown_runtime__.createModuleHotContext("foo.mjs");
__rolldown_runtime__.registerModule("foo.mjs", { exports: foo_exports });
const foo$1 = "foo";

//#endregion
//#region foo/index.mjs
var foo_exports$1 = {};
__export(foo_exports$1, { foo: () => foo });
const foo_hot = __rolldown_runtime__.createModuleHotContext("foo/index.mjs");
__rolldown_runtime__.registerModule("foo/index.mjs", { exports: foo_exports$1 });
const foo = "foo-index";

//#endregion
//#region main.js
var main_exports = {};
const main_hot = __rolldown_runtime__.createModuleHotContext("main.js");
__rolldown_runtime__.registerModule("main.js", { exports: main_exports });
console.log(foo$1, foo);
main_hot.accept(() => {});

//#endregion
```
# HMR Step 0

## Code

```js
//#region main.js
import * as import_node_assert_0 from "node:assert";
var init_main_0 = __rolldown_runtime__.createEsmInitializer((function() {
	try {
		var __rolldown_exports__ = {};
		__rolldown_runtime__.__export(__rolldown_exports__, {});
		__rolldown_runtime__.registerModule("main.js", { exports: __rolldown_exports__ });
		const hot_main = __rolldown_runtime__.createModuleHotContext("main.js");
		var import_foo_0 = __rolldown_runtime__.loadExports("foo.mjs");
		var import_foo_0 = __rolldown_runtime__.loadExports("foo/index.mjs");
		import_node_assert_0.default.strictEqual(import_foo_0.foo, "foo");
		import_node_assert_0.default.strictEqual(import_foo_0.foo, "foo-index");
		hot_main.accept(() => {});
	} finally {}
}));

//#endregion
init_main_0()
__rolldown_runtime__.applyUpdates(['main.js']);
```
## Meta

- update type: patch
### Hmr Boundaries

- boundary: main.js, accepted_via: main.js
