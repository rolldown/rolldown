---
source: crates/rolldown_testing/src/integration_test.rs
---
# Assets

## chunk.js

```js
// HIDDEN [rolldown:runtime]
export { __commonJS, __export, __toCommonJS, __toDynamicImportESM, __toESM };
```
## exist-dep-cjs.js

```js
import { __commonJS } from "./chunk.js";

//#region exist-dep-cjs.js
var require_exist_dep_cjs = /* @__PURE__ */ __commonJS({ "exist-dep-cjs.js": ((exports, module) => {
	const exist_dep_cjs_hot = __rolldown_runtime__.createModuleHotContext("exist-dep-cjs.js");
	__rolldown_runtime__.registerModule("exist-dep-cjs.js", module);
	exports.value = "exist-cjs";
}) });

//#endregion
export default require_exist_dep_cjs();

```
## exist-dep-esm.js

```js
import { __export } from "./chunk.js";

//#region exist-dep-esm.js
var exist_dep_esm_exports = {};
__export(exist_dep_esm_exports, { value: () => value });
const exist_dep_esm_hot = __rolldown_runtime__.createModuleHotContext("exist-dep-esm.js");
__rolldown_runtime__.registerModule("exist-dep-esm.js", { exports: exist_dep_esm_exports });
const value = "exist-esm";

//#endregion
export { value };
```
## main.js

```js
import { __export, __toCommonJS, __toDynamicImportESM, __toESM } from "./chunk.js";

// HIDDEN [rolldown:hmr]
//#region hmr.js
var hmr_exports = {};
__export(hmr_exports, { foo: () => foo });
const hmr_hot = __rolldown_runtime__.createModuleHotContext("hmr.js");
__rolldown_runtime__.registerModule("hmr.js", { exports: hmr_exports });
async function foo() {
	await import("./exist-dep-cjs.js").then(__toDynamicImportESM()).then(console.log);
	await import("./exist-dep-esm.js").then(console.log);
}
hmr_hot.accept((mod) => {
	if (mod) {
		console.log(".hmr", mod.foo);
	}
});

//#endregion
//#region main.js
var main_exports = {};
const main_hot = __rolldown_runtime__.createModuleHotContext("main.js");
__rolldown_runtime__.registerModule("main.js", { exports: main_exports });

//#endregion
```
# HMR Step 0

## Code

```js
//#region exist-dep-cjs.js
var require_exist_dep_cjs_0 = __rolldown_runtime__.createCjsInitializer(function(module, exports) {
	try {
		__rolldown_runtime__.registerModule("exist-dep-cjs.js", module);
		const hot_exist_dep_cjs = __rolldown_runtime__.createModuleHotContext("exist-dep-cjs.js");
		exports.value = "exist-cjs";
	} finally {}
});

//#endregion
//#region exist-dep-esm.js
var init_exist_dep_esm_1 = __rolldown_runtime__.createEsmInitializer((function() {
	try {
		var ns_exist_dep_esm = {};
		__rolldown_runtime__.__export(ns_exist_dep_esm, { value: () => value });
		__rolldown_runtime__.registerModule("exist-dep-esm.js", { exports: ns_exist_dep_esm });
		const hot_exist_dep_esm = __rolldown_runtime__.createModuleHotContext("exist-dep-esm.js");
		const value = "exist-esm";
	} finally {}
}));

//#endregion
//#region hmr.js
var init_hmr_2 = __rolldown_runtime__.createEsmInitializer((function() {
	try {
		var ns_hmr = {};
		__rolldown_runtime__.__export(ns_hmr, {
			foo: () => foo,
			bar: () => bar
		});
		__rolldown_runtime__.registerModule("hmr.js", { exports: ns_hmr });
		const hot_hmr = __rolldown_runtime__.createModuleHotContext("hmr.js");
		async function foo() {
			await (require_exist_dep_cjs_0(), Promise.resolve().then(() => __rolldown_runtime__.__toDynamicImportESM(__rolldown_runtime__.loadExports("exist-dep-cjs.js")))).then(console.log);
			await (init_exist_dep_esm_1(), Promise.resolve().then(() => __rolldown_runtime__.loadExports("exist-dep-esm.js"))).then(console.log);
		}
		async function bar() {
			await (require_new_dep_cjs_3(), Promise.resolve().then(() => __rolldown_runtime__.__toDynamicImportESM(__rolldown_runtime__.loadExports("new-dep-cjs.js")))).then(console.log);
			await (init_new_dep_esm_4(), Promise.resolve().then(() => __rolldown_runtime__.loadExports("new-dep-esm.js"))).then(console.log);
		}
		hot_hmr.accept((mod) => {
			if (mod) {
				console.log(".hmr", mod.foo);
			}
		});
	} finally {}
}));

//#endregion
//#region new-dep-cjs.js
var require_new_dep_cjs_3 = __rolldown_runtime__.createCjsInitializer(function(module, exports) {
	try {
		__rolldown_runtime__.registerModule("new-dep-cjs.js", module);
		const hot_new_dep_cjs = __rolldown_runtime__.createModuleHotContext("new-dep-cjs.js");
		exports.value = "new-cjs";
	} finally {}
});

//#endregion
//#region new-dep-esm.js
var init_new_dep_esm_4 = __rolldown_runtime__.createEsmInitializer((function() {
	try {
		var ns_new_dep_esm = {};
		__rolldown_runtime__.__export(ns_new_dep_esm, { value: () => value });
		__rolldown_runtime__.registerModule("new-dep-esm.js", { exports: ns_new_dep_esm });
		const hot_new_dep_esm = __rolldown_runtime__.createModuleHotContext("new-dep-esm.js");
		const value = "new-esm";
	} finally {}
}));

//#endregion
init_hmr_2()
__rolldown_runtime__.applyUpdates(['hmr.js']);
```
## Meta

- full_reload: false
- first_invalidated_by: None
- is_self_accepting: false
- full_reload_reason: None
### Hmr Boundaries

- boundary: hmr.js, accepted_via: hmr.js
