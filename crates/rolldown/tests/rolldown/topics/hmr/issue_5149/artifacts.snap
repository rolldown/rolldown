---
source: crates/rolldown_testing/src/integration_test.rs
---
# Assets

## main.js

```js
// HIDDEN [rolldown:runtime]
// HIDDEN [rolldown:hmr]
//#region common.js
var common_exports = {};
/* @__PURE__ */ __export(common_exports, { prefix: () => prefix });
const common_hot = __rolldown_runtime__.createModuleHotContext("common.js");
__rolldown_runtime__.registerModule("common.js", { exports: common_exports });
const prefix = "prefix:";

//#endregion
//#region foo.js
var foo_exports = {};
/* @__PURE__ */ __export(foo_exports, { foo: () => foo });
const foo_hot = __rolldown_runtime__.createModuleHotContext("foo.js");
__rolldown_runtime__.registerModule("foo.js", { exports: foo_exports });
const foo = prefix + "foo";

//#endregion
//#region bar.js
var bar_exports = {};
/* @__PURE__ */ __export(bar_exports, { bar: () => bar });
const bar_hot = __rolldown_runtime__.createModuleHotContext("bar.js");
__rolldown_runtime__.registerModule("bar.js", { exports: bar_exports });
const bar = prefix + "bar";

//#endregion
//#region messenger.js
var messenger_exports = {};
/* @__PURE__ */ __export(messenger_exports, {
	msg: () => msg,
	sayMessage: () => sayMessage
});
const messenger_hot = __rolldown_runtime__.createModuleHotContext("messenger.js");
__rolldown_runtime__.registerModule("messenger.js", { exports: messenger_exports });
let msg = [
	prefix,
	foo,
	bar,
	prefix,
	prefix
].join(",");
function sayMessage() {
	console.log(msg);
}
if (messenger_hot) {
	messenger_hot.accept((mod) => {
		console.log("replaced with new msg: ", mod.msg);
		msg = mod.msg;
	});
}

//#endregion
//#region main.js
var main_exports = {};
const main_hot = __rolldown_runtime__.createModuleHotContext("main.js");
__rolldown_runtime__.registerModule("main.js", { exports: main_exports });
sayMessage();

//#endregion
```
# HMR Step 0

## Code

```js
//#region foo.js
var init_foo_0 = __rolldown_runtime__.createEsmInitializer((function() {
	try {
		var __rolldown_exports__ = {};
		__rolldown_runtime__.__export(__rolldown_exports__, { foo: () => foo });
		__rolldown_runtime__.registerModule("foo.js", { exports: __rolldown_exports__ });
		const hot_foo = __rolldown_runtime__.createModuleHotContext("foo.js");
		var import_common_00 = __rolldown_runtime__.loadExports("common.js");
		const foo = import_common_00.prefix + "foo-new";
	} finally {}
}));

//#endregion
//#region messenger.js
var init_messenger_1 = __rolldown_runtime__.createEsmInitializer((function() {
	try {
		var __rolldown_exports__ = {};
		__rolldown_runtime__.__export(__rolldown_exports__, {
			msg: () => msg,
			sayMessage: () => sayMessage
		});
		__rolldown_runtime__.registerModule("messenger.js", { exports: __rolldown_exports__ });
		init_foo_0();
		const hot_messenger = __rolldown_runtime__.createModuleHotContext("messenger.js");
		var import_foo_10 = __rolldown_runtime__.loadExports("foo.js");
		var import_bar_11 = __rolldown_runtime__.loadExports("bar.js");
		var import_common_12 = __rolldown_runtime__.loadExports("common.js");
		let msg = [
			import_common_12.prefix,
			import_foo_10.foo,
			import_bar_11.bar,
			import_common_12.prefix,
			import_common_12.prefix
		].join(",");
		function sayMessage() {
			console.log(msg);
		}
		if (hot_messenger) {
			hot_messenger.accept((mod) => {
				console.log("replaced with new msg: ", mod.msg);
				msg = mod.msg;
			});
		}
	} finally {}
}));

//#endregion
init_messenger_1()
__rolldown_runtime__.applyUpdates([['messenger.js', 'messenger.js']]);
```
## Meta

- update type: patch
### Hmr Boundaries

- boundary: messenger.js, accepted_via: messenger.js
