//#region rolldown:runtime
var __defProp = Object.defineProperty;
var __export = (all) => {
	let target = {};
	for (var name$4 in all) __defProp(target, name$4, {
		get: all[name$4],
		enumerable: true
	});
	return target;
};

//#endregion
//#region ../fixtures/a/modules/a.ts
var a_exports = /* @__PURE__ */ __export({ name: () => name$1 });
const name$1 = "a";

//#endregion
//#region ../fixtures/a/modules/b.ts
var b_exports = /* @__PURE__ */ __export({ name: () => name$2 });
const name$2 = "b";

//#endregion
//#region ../fixtures/a/modules/index.ts
var modules_exports = /* @__PURE__ */ __export({
	a: () => name$1,
	b: () => name$2,
	default: () => modules_default,
	name: () => name$3
});
const name$3 = "index";
var modules_default = "indexDefault";

//#endregion
//#region ../fixtures/a/modules/a.ts?raw
var a_default = "export const name = 'a'\n";

//#endregion
//#region ../fixtures/a/modules/b.ts?raw
var b_default = "export const name = 'b'\n";

//#endregion
//#region ../fixtures/a/index.ts
const basic = {
	"./modules/a.ts": () => Promise.resolve().then(() => ({ name: name$1 })),
	"./modules/b.ts": () => Promise.resolve().then(() => ({ name: name$2 })),
	"./modules/index.ts": () => Promise.resolve().then(() => ({
		a: name$1,
		b: name$2,
		default: modules_default,
		name: name$3
	}))
};
const basicWithObjectKeys = Object.keys({
	"./modules/a.ts": 0,
	"./modules/b.ts": 0,
	"./modules/index.ts": 0
});
const basicWithObjectValues = Object.values([
	() => Promise.resolve().then(() => ({ name: name$1 })),
	() => Promise.resolve().then(() => ({ name: name$2 })),
	() => Promise.resolve().then(() => ({
		a: name$1,
		b: name$2,
		default: modules_default,
		name: name$3
	}))
]);
const basicEager = {
	"./modules/a.ts": a_exports,
	"./modules/b.ts": b_exports,
	"./modules/index.ts": modules_exports
};
const basicEagerWithObjectKeys = Object.keys({
	"./modules/a.ts": 0,
	"./modules/b.ts": 0,
	"./modules/index.ts": 0
});
const basicEagerWithObjectValues = Object.values([
	a_exports,
	b_exports,
	modules_exports
]);
const ignore = {
	"./modules/a.ts": () => Promise.resolve().then(() => ({ name: name$1 })),
	"./modules/b.ts": () => Promise.resolve().then(() => ({ name: name$2 }))
};
const ignoreWithObjectKeys = Object.keys({
	"./modules/a.ts": 0,
	"./modules/b.ts": 0
});
const ignoreWithObjectValues = Object.values([() => Promise.resolve().then(() => ({ name: name$1 })), () => Promise.resolve().then(() => ({ name: name$2 }))]);
const namedEager = {
	"./modules/a.ts": name$1,
	"./modules/b.ts": name$2,
	"./modules/index.ts": name$3
};
const namedEagerWithObjectKeys = Object.keys({
	"./modules/a.ts": 0,
	"./modules/b.ts": 0,
	"./modules/index.ts": 0
});
const namedEagerWithObjectValues = Object.values([
	name$1,
	name$2,
	name$3
]);
const namedDefault = {
	"./modules/a.ts": () => Promise.resolve().then(() => ({ name: name$1 })).then((m) => m.default),
	"./modules/b.ts": () => Promise.resolve().then(() => ({ name: name$2 })).then((m) => m.default),
	"./modules/index.ts": () => Promise.resolve().then(() => ({
		a: name$1,
		b: name$2,
		default: modules_default,
		name: name$3
	})).then((m) => m.default)
};
const namedDefaultWithObjectKeys = Object.keys({
	"./modules/a.ts": 0,
	"./modules/b.ts": 0,
	"./modules/index.ts": 0
});
const namedDefaultWithObjectValues = Object.values([
	() => Promise.resolve().then(() => ({ name: name$1 })).then((m) => m.default),
	() => Promise.resolve().then(() => ({ name: name$2 })).then((m) => m.default),
	() => Promise.resolve().then(() => ({
		a: name$1,
		b: name$2,
		default: modules_default,
		name: name$3
	})).then((m) => m.default)
]);
const eagerAs = {
	"./modules/a.ts": a_default,
	"./modules/b.ts": b_default
};
const rawImportModule = {
	"./modules/a.ts": () => Promise.resolve().then(() => ({ default: a_default })),
	"./modules/b.ts": () => Promise.resolve().then(() => ({ default: b_default }))
};
const excludeSelf = { "./sibling.ts": () => import("./sibling.js") };
const excludeSelfRaw = { "./sibling.ts": () => import("./sibling2.js") };
const customQueryString = { "./sibling.ts": () => import("./sibling.ts_base64_lang.js") };
const parent = {};
const rootMixedRelative = {
	"/b/a.ts": () => import("./a.ts_url_lang.js").then((m) => m.default),
	"/b/b.ts": () => import("./b.ts_url_lang.js").then((m) => m.default),
	"/b/index.ts": () => import("./index.ts_url_lang.js").then((m) => m.default)
};
const cleverCwd1 = { "./node_modules/framework/pages/hello.page.js": () => import("./hello.page.js") };
const cleverCwd2 = {
	"./modules/a.ts": () => Promise.resolve().then(() => ({ name: name$1 })),
	"./modules/b.ts": () => Promise.resolve().then(() => ({ name: name$2 })),
	"../b/a.ts": () => import("./a.js"),
	"../b/b.ts": () => import("./b.js")
};
const customBase = {
	"./modules/a.ts": () => Promise.resolve().then(() => ({ name: name$1 })),
	"./modules/b.ts": () => Promise.resolve().then(() => ({ name: name$2 })),
	"./modules/index.ts": () => Promise.resolve().then(() => ({
		a: name$1,
		b: name$2,
		default: modules_default,
		name: name$3
	})),
	"./sibling.ts": () => import("./sibling.js")
};
const customRootBase = {
	"./a.ts": () => import("./a.js"),
	"./b.ts": () => import("./b.js"),
	"./index.ts": () => import("./b3.js")
};
const customBaseParent = {
	"../b/a.ts": () => import("./a.js"),
	"../b/b.ts": () => import("./b.js"),
	"../b/index.ts": () => import("./b3.js")
};

//#endregion
export { basic, basicEager, basicEagerWithObjectKeys, basicEagerWithObjectValues, basicWithObjectKeys, basicWithObjectValues, cleverCwd1, cleverCwd2, customBase, customBaseParent, customQueryString, customRootBase, eagerAs, excludeSelf, excludeSelfRaw, ignore, ignoreWithObjectKeys, ignoreWithObjectValues, namedDefault, namedDefaultWithObjectKeys, namedDefaultWithObjectValues, namedEager, namedEagerWithObjectKeys, namedEagerWithObjectValues, parent, rawImportModule, rootMixedRelative };