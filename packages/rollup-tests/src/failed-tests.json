[
  "rollup@form@avoid-unnecessary-conditional-deopt: avoids unnecessary deoptimizations of conditional expressions",
  "rollup@form@chained-assignments: treeshakes chained assignments",
  "rollup@form@comment-before-import: preserves comments before imports@generates es",
  "rollup@form@comment-start-inside-comment: properly remove coments above import statements@generates es",
  "rollup@form@compact-multiple-imports: correctly handles empty external imports in compact mode@generates es",
  "rollup@form@compact: supports compact output with compact: true@generates es",
  "rollup@form@computed-properties: computed property keys include declarations of referenced identifiers@generates es",
  "rollup@form@conditional-put-parens-around-sequence: put parens around sequences if conditional simplified (#1311)",
  "rollup@form@configure-file-url: allows to configure file urls@generates es",
  "rollup@form@conflicting-imports: ensures bundle imports are deconflicted (#659)@generates es",
  "rollup@form@curried-function: properly handles a curried function",
  "rollup@form@custom-context: allows custom context@generates es",
  "rollup@form@custom-dynamic-import-no-interop: does not add any interop when using a custom dynamic import handler@generates es",
  "rollup@form@custom-module-context-function: allows custom module-specific context with a function option",
  "rollup@form@custom-module-context: allows custom module-specific context@generates es",
  "rollup@form@deconflict-format-specific-exports: only deconflict \"exports\" for formats where it is necessary@generates es",
  "rollup@form@deconflict-format-specific-globals: deconflicts format specific globals@generates es",
  "rollup@form@dedupes-external-imports: dedupes external imports@generates es",
  "rollup@form@default-export-anonymous-class-extends: handles default exported classes extending a regular expression argument (#4783)",
  "rollup@form@default-export-class: puts the export after the declaration for default exported classes in SystemJS@generates es",
  "rollup@form@default-export-mode: allows specifying the export mode to be \"default\"@generates es",
  "rollup@form@deopt-string-concatenation: deoptimize concatenation when used as an expression statement to better support es5-shim",
  "rollup@form@deoptimize-superclass: does not deoptimize the entire superclass when reassigning a property",
  "rollup@form@deprecated@removes-dynamic-assertions: keep import assertions for dynamic imports",
  "rollup@form@deprecated@removes-static-attributes: keeps any import assertions on input",
  "rollup@form@dynamic-import-inlining-array: supports an array with a single entry when inlining dynamic imports",
  "rollup@form@dynamic-import-inlining: dynamic import inlining",
  "rollup@form@dynamic-import-this-arrow: uses correct \"this\" in dynamic imports when using arrow functions@generates es",
  "rollup@form@dynamic-import-this-function: uses correct \"this\" in dynamic imports when not using arrow functions@generates es",
  "rollup@form@dynamic-import-unresolvable: Returns the raw AST nodes for unresolvable dynamic imports@generates es",
  "rollup@form@early-bind-member-expressions: correctly resolves namespace members when accessed early (#2895)",
  "rollup@form@effect-in-for-of-loop-in-functions: includes effects in for-of loop (#870)@generates es",
  "rollup@form@effect-in-for-of-loop: includes effects in for-of loop (#870)@generates es",
  "rollup@form@emit-asset-file: supports emitting assets from plugin hooks@generates es",
  "rollup@form@emit-uint8array-no-buffer: supports emitting assets as Uint8Arrays when Buffer is not available@generates es",
  "rollup@form@empty-do-while-statement: removes an empty do-while statement@generates es",
  "rollup@form@empty-for-in-statement: removes an empty for-in statement",
  "rollup@form@empty-for-statement: removes an empty for statement@generates es",
  "rollup@form@empty-if-statement: removes an empty if statement",
  "rollup@form@empty-statament-class-member: Do not crash if class body has empty statements@generates es",
  "rollup@form@empty-switch-statement: removes an empty switch statement",
  "rollup@form@empty-while-statement: removes an empty while statement@generates es",
  "rollup@form@entry-with-unused-synthetic-exports: does not include unused synthetic namespace object in entry points@generates es",
  "rollup@form@exclude-unnecessary-modifications: statements that modify definitions within unused functions are excluded@generates es",
  "rollup@form@exponentiation-operator: folds exponentiation operator when considering dead code@generates es",
  "rollup@form@export-all-before-named: external `export *` must not interfere with internal exports@generates es",
  "rollup@form@export-all-multiple: correctly handles multiple export * declarations (#1252)@generates es",
  "rollup@form@export-default-2: re-exporting a default export@generates es",
  "rollup@form@export-default-3: re-exporting a default export@generates es",
  "rollup@form@export-default-4: single default export in deep namespace@generates es",
  "rollup@form@export-default-anonymous-declarations: export default [Declaration] with spaces and comments@generates es",
  "rollup@form@export-default-global: handles default exporting global variables@generates es",
  "rollup@form@export-default-import: correctly exports a default import, even in ES mode (#513)@generates es",
  "rollup@form@export-default: single (default) exports@generates es",
  "rollup@form@export-internal-namespace-as: supports exporting and resolving internal namespaces as names",
  "rollup@form@export-live-bindings: exported live bindings@generates es",
  "rollup@form@export-namespace-as: supports exporting namespaces as names in entry points@generates es",
  "rollup@form@exported-class-declaration-conflict: handles exporting class declarations with name conflicts in SystemJS@generates es",
  "rollup@form@external-deshadowing: Externals aliases with deshadowing@generates es",
  "rollup@form@external-empty-import-no-global-b: does not expect a global to be provided for empty imports (#1217)@generates es",
  "rollup@form@external-empty-import-no-global: does not expect a global to be provided for empty imports (#1217)@generates es",
  "rollup@form@external-export-tracing: Support external namespace reexport@generates es",
  "rollup@form@external-import-alias-shadow: handles external aliased named imports that shadow another name@generates es",
  "rollup@form@external-imports: prefixes global names with `global.` when creating UMD bundle (#57)@generates es",
  "rollup@form@external-namespace-and-named: Correctly handles external namespace tracing with both namespace and named exports@generates es",
  "rollup@form@external-namespace-reexport: Support external namespace reexport@generates es",
  "rollup@form@for-in-scopes: properly associate or shadow variables in and around for-in-loops",
  "rollup@form@for-loop-assignment: removes assignments with computed indexes in for loops",
  "rollup@form@for-loop-with-empty-head: handles for loop with empty head@generates es",
  "rollup@form@for-of-scopes: properly associate or shadow variables in and around for-of-loops",
  "rollup@form@for-scopes: properly associate or shadow variables in and around for-loops@generates es",
  "rollup@form@freeze: supports opt-ing out of usage of Object.freeze@generates es",
  "rollup@form@function-body-return-values: properly extract return values from function bodies",
  "rollup@form@function-iterable-prototype: Removes unused functions where the prototype is iterable",
  "rollup@form@function-mutation: function-mutations do not have effects@generates es",
  "rollup@form@function-scopes: properly associate or shadow variables in and around functions@generates es",
  "rollup@form@generated-code-compact@arrow-functions-false: does not use arrow functions@generates es",
  "rollup@form@generated-code-compact@arrow-functions-true: uses arrow functions@generates es",
  "rollup@form@generated-code-compact@const-bindings-false: does not use block bindings@generates es",
  "rollup@form@generated-code-compact@const-bindings-true: uses block bindings@generates es",
  "rollup@form@generated-code-compact@object-shorthand-false: does not use object shorthand syntax",
  "rollup@form@generated-code-compact@object-shorthand-true: uses object shorthand syntax",
  "rollup@form@generated-code-compact@reserved-names-as-props-false: escapes reserved names used as props@generates es",
  "rollup@form@generated-code-compact@reserved-names-as-props-true: escapes reserved names used as props@generates es",
  "rollup@form@generated-code-presets@es2015: handles generatedCode preset \"es2015\"",
  "rollup@form@generated-code-presets@es5: handles generatedCode preset \"es5\"",
  "rollup@form@generated-code-presets@preset-with-override: handles generatedCode preset \"es2015\"",
  "rollup@form@generated-code@arrow-functions-false: does not use arrow functions@generates es",
  "rollup@form@generated-code@arrow-functions-true: uses arrow functions@generates es",
  "rollup@form@generated-code@const-bindings-false: does not use block bindings@generates es",
  "rollup@form@generated-code@const-bindings-true: uses block bindings@generates es",
  "rollup@form@generated-code@object-shorthand-false: does not use object shorthand syntax",
  "rollup@form@generated-code@object-shorthand-true: uses object shorthand syntax",
  "rollup@form@generated-code@reserved-names-as-props-false: escapes reserved names used as props@generates es",
  "rollup@form@generated-code@reserved-names-as-props-true: escapes reserved names used as props@generates es",
  "rollup@form@getter-return-values: forwards return values of getters",
  "rollup@form@guessed-global-names: guesses global names if necessary@generates es",
  "rollup@form@handles-empty-imports-iife: handles empty imports when generating IIFE output",
  "rollup@form@handles-empty-imports-umd: handles empty imports when generating IIFE output",
  "rollup@form@hoisted-variable-case-stmt: Properly handles a variable hoisted from within a fallthrough switch case",
  "rollup@form@hoisted-variable-if-stmt: Properly renders branches which refer to hoisted variables from other lexical scopes",
  "rollup@form@hoisted-vars-in-dead-branches: renders hoisted variables in dead branches",
  "rollup@form@import-attributes@attribute-shapes: handles special shapes of attributes",
  "rollup@form@import-attributes@keep-dynamic-assertions: keep import attributes for dynamic imports@generates es",
  "rollup@form@import-attributes@keep-dynamic-attributes: keep import attributes for dynamic imports@generates es",
  "rollup@form@import-attributes@keeps-static-assertions: keeps any import assertions on input@generates es",
  "rollup@form@import-attributes@keeps-static-attributes: keeps any import attributes on input@generates es",
  "rollup@form@import-attributes@plugin-attributes-resolvedynamicimport: allows plugins to read and write import attributes in resolveDynamicImport",
  "rollup@form@import-attributes@plugin-attributes-resolveid: allows plugins to read and write import attributes in resolveId",
  "rollup@form@import-attributes@removes-dynamic-attributes: keep import attributes for dynamic imports",
  "rollup@form@import-attributes@removes-static-attributes: keeps any import attributes on input",
  "rollup@form@import-expression: correctly transforms variables in imported expressions@generates es",
  "rollup@form@import-external-namespace-and-default: disinguishes between external default and namespace (#637)@generates es",
  "rollup@form@import-meta-url: supports import.meta.url@generates es",
  "rollup@form@import-named-exported-global-with-alias: allow globals to be exported and imported",
  "rollup@form@import-namespace-systemjs: imports namespace (systemjs only)",
  "rollup@form@import-specifier-deshadowing: deshadows aliased import bindings@generates es",
  "rollup@form@inline-with-reexport: handles inlining dynamic imports when the imported module contains reexports",
  "rollup@form@internal-conflict-resolution: internal name conflicts are resolved sanely@generates es",
  "rollup@form@interop-per-dependency-no-freeze: respects the freeze option@generates es",
  "rollup@form@interop-per-dependency-no-live-binding: allows to configure the interop type per external dependency",
  "rollup@form@interop-per-dependency: allows to configure the interop type per external dependency@generates es",
  "rollup@form@interop-per-reexported-dependency: allows to configure the interop type per reexported external dependency@generates es",
  "rollup@form@intro-and-outro: adds an intro/outro@generates es",
  "rollup@form@invalid-binary-expressions: Does not fail when bundling code where the `in`-operator is used with invalid right sides",
  "rollup@form@json-parse-is-not-pure: JSON.parse is not pure as it can throw on invalid json strings@generates es",
  "rollup@form@json-stringify-is-not-pure: JSON.stringify is not pure as it can throw on circular structures@generates es",
  "rollup@form@keep-tree-shaking-comments-no-asi: always keep leading comments when tree-shaking and no automatic semicolons are inserted",
  "rollup@form@labeled-break-statements: keep break statements if their label is included",
  "rollup@form@labeled-continue-statements: keep continue statements if their label is included",
  "rollup@form@large-var-cnt-deduping: large variable count deduping",
  "rollup@form@lazy-assignment-deoptimization: only deoptimizes assigned variables when the assignment is included",
  "rollup@form@literals-from-class-statics: tracks literal values in class static fields",
  "rollup@form@logical-expression@deopzimize-while-included: handles deoptimizations of logical expression while they are inlcuded (#3324)",
  "rollup@form@logical-expression@mutate-logical-expression: properly handle the results of mutating logical expressions@generates es",
  "rollup@form@logical-expression@simplify-non-boolean: simplifies logical expressions that resolve statically to non-boolean values",
  "rollup@form@make-absolute-externals-relative@make-relative-false: does not normalize external paths when set to false",
  "rollup@form@make-absolute-externals-relative@make-relative-relative: only normalizes external paths that were originally relative when set to \"ifRelativeSource\"",
  "rollup@form@make-absolute-externals-relative@make-relative-true: normalizes both relative and absolute external paths when set to true",
  "rollup@form@merge-namespaces-non-live: merges namespaces without live-bindings",
  "rollup@form@merge-namespaces: merges namespaces with live-bindings",
  "rollup@form@mjs: supports loading mjs with precedence@generates es",
  "rollup@form@modify-export-semi: inserts semicolons correctly when modifying SystemJS exports@generates system",
  "rollup@form@mutations-in-imports: track mutations of imports",
  "rollup@form@namespace-conflict: replaces conflicting namespace properties with undefined",
  "rollup@form@namespace-import-reexport-2: properly associate or shadow variables in and around functions@generates es",
  "rollup@form@namespace-import-reexport: properly associate or shadow variables in and around functions@generates es",
  "rollup@form@namespace-missing-export-effects: handles interacting with missing namespace members",
  "rollup@form@namespace-object-import: properly encodes reserved names if namespace import is used@generates es",
  "rollup@form@namespace-optimization-b: it does static lookup optimization of internal namespaces, coping with multiple namespaces in one function@generates es",
  "rollup@form@namespace-optimization-computed-string: it does dynamic lookup optimization of internal namespaces for string-literal keys@generates es",
  "rollup@form@namespace-reexport-name: uses correct names when reexporting from namespace reexports (#4049)@generates es",
  "rollup@form@namespace-self-import: namespace early import hoisting@generates es",
  "rollup@form@namespace-tostring@entry-default: does not add Symbol.toStringTag property to entry chunks with default export mode@generates es",
  "rollup@form@namespace-tostring@entry-named: adds Symbol.toStringTag property to entry chunks with named exports@generates es",
  "rollup@form@namespace-tostring@inlined-namespace-static-resolution: statically resolves Symbol.toStringTag for inlined namespaces",
  "rollup@form@namespace-tostring@inlined-namespace: adds Symbol.toStringTag property to inlined namespaces@generates es",
  "rollup@form@namespaced-default-exports: creates namespaced module names@generates es",
  "rollup@form@namespaces-have-null-prototype: creates namespaces with null prototypes@generates es",
  "rollup@form@nested-inlined-dynamic-import: deconflicts variables when nested dynamic imports are inlined@generates es",
  "rollup@form@nested-pure-comments: correctly associates pure comments before sequence expressions etc.",
  "rollup@form@nested-this-expressions: properly keep or ignore nested \"this\"-expressions",
  "rollup@form@nested-tree-shaking: removes unused nested statements",
  "rollup@form@no-external-live-bindings-compact: Allows omitting the code that handles external live bindings in compact mode@generates es",
  "rollup@form@no-external-live-bindings: Allows omitting the code that handles external live bindings@generates es",
  "rollup@form@no-treeshake-conflict: does not introduce conflicting variables with treeshake: false@generates es",
  "rollup@form@no-treeshake-default-export-conflict: properly deconflicts default exports when not tree-shaking",
  "rollup@form@no-treeshake-namespace-object: generates namespace objects when not tree-shaking",
  "rollup@form@no-treeshake: all code should be included if tree-shaking is disabled",
  "rollup@form@ns-external-star-reexport: supports namespaces with external star reexports@generates es",
  "rollup@form@object-expression@proto-property: Deoptimize when __proto__ is used",
  "rollup@form@object-expression@reassign-prop-without-proto: correctly deoptimizes when there is no proto",
  "rollup@form@optional-chaining: supports optional chaining",
  "rollup@form@override-external-namespace: allows overriding imports of external namespace reexports@generates es",
  "rollup@form@paths-function: external paths (#754)@generates es",
  "rollup@form@paths-relative: external paths (#754)@generates es",
  "rollup@form@paths: external paths (#754)@generates es",
  "rollup@form@pattern-member-expressions: handles member expressions in patterns (#2750)",
  "rollup@form@per-output-plugins: allows specifying per-output plugins@generates es",
  "rollup@form@proper-this-context: make sure \"this\" respects the context for arrow functions",
  "rollup@form@property-setters-and-getters@early-access-getter-return: handles accessing the return expression of a getter before it has been bound",
  "rollup@form@property-setters-and-getters@early-access-getter-value: handles accessing the value of a getter before it has been bound",
  "rollup@form@property-setters-and-getters@shadowed-setters: handles setters shadowed by computed setters",
  "rollup@form@prototype-functions: properly includes prototype functions",
  "rollup@form@prune-pure-unused-import-array: prunes pure unused external imports ([#1352])@generates es",
  "rollup@form@prune-pure-unused-import-function: prunes pure unused external imports ([#1352])@generates es",
  "rollup@form@prune-pure-unused-import: prunes pure unused external imports ([#1352])@generates es",
  "rollup@form@pure-class-field: retains pure annotations in class fields",
  "rollup@form@pure-comment-scenarios-complex: correctly handles various advanced pure comment scenarios",
  "rollup@form@pure-comments-disabled: does not rely on pure annotations if they are disabled",
  "rollup@form@quote-id: handles escaping for external ids@generates es",
  "rollup@form@re-export-aliasing: external re-exports aliasing@generates es",
  "rollup@form@reassigned-exported-functions-and-classes: use legal names for exported functions and classed (#1943)@generates es",
  "rollup@form@recursive-assignments: do not fail for pathological recursive algorithms and circular structures",
  "rollup@form@recursive-literal-values: do not fail for literal values from recursive return values",
  "rollup@form@redeclarations: make sure re-declarations via var and function are linked properly",
  "rollup@form@reexport-external-default-and-name: reexports a an external default as a name and imports another name from that dependency@generates es",
  "rollup@form@reexport-external-default-and-namespace: reexports a default external import as default export (when using named exports)@generates es",
  "rollup@form@reexport-external-default-as-name-and-name: re-exports a named external export as default@generates es",
  "rollup@form@reexport-external-default: reexports an external default export@generates es",
  "rollup@form@reexport-external-name-as-default2: re-exports a named external export as default via another file@generates es",
  "rollup@form@reexport-external-name-as-default: re-exports a named external export as default@generates es",
  "rollup@form@reexport-external-name: re-exports a named export from an external module@generates es",
  "rollup@form@reexport-external-namespace-as: reexport external namespace as name@generates es",
  "rollup@form@reexport-external-namespace: re-exports * from external module (#791)@generates es",
  "rollup@form@reexport-used-external-namespace-as: reexport external namespace as name if the namespace is also used@generates es",
  "rollup@form@relative-external-ids: relative external ids are absolutely resolved",
  "rollup@form@relative-external-with-global: applies globals to externalised relative imports@generates es",
  "rollup@form@removes-existing-sourcemap-comments: removes existing sourcemap comments@generates es",
  "rollup@form@removes-unused-babel-helpers: Removes unused babel helpers from the build (#1595)",
  "rollup@form@render-chunk-plugin-sourcemaps: supports returning undefined source maps from render chunk hooks, when source maps are enabled@generates es",
  "rollup@form@render-declaration-semicolons: properly inserts semi-colons after declarations (#1993)@generates es",
  "rollup@form@render-named-export-declarations: renders named export declarations@generates es",
  "rollup@form@render-removed-statements: make sure removed statements do no leave unwanted white-space",
  "rollup@form@reserved-keywords-in-imports-exports: correctly handles reserved keywords in exports/imports@generates es",
  "rollup@form@resolution-order: does not depend on the resolution order of modules for tree-shaking (#2753)",
  "rollup@form@resolve-import-meta-url-export: correctly exports resolved import.meta.url@generates es",
  "rollup@form@resolve-import-meta-url: allows to configure import.meta.url@generates es",
  "rollup@form@self-deoptimization: handles situations where a member expression is deoptimized while being deoptimized",
  "rollup@form@simplify-return-expression: Simplifies conditionals in return expression",
  "rollup@form@slash-in-function-parameters: handles slashes in function parameters and correctly inserts missing ids@generates es",
  "rollup@form@sourcemaps-excludesources: correct sourcemaps are written (excluding sourceContent)@generates es",
  "rollup@form@sourcemaps-external: correct sourcemaps are written (separate file)@generates es",
  "rollup@form@sourcemaps-hidden: correct sourcemaps are written (separate file) without comment@generates es",
  "rollup@form@static-block-render: Correctly render treeshaked inline static blocks",
  "rollup@form@static-method-deoptimization: avoids infinite recursions when deoptimizing \"this\" context",
  "rollup@form@super-classes@super-class-prototype-access: correctly resolves the prototype of the super class when accessing properties",
  "rollup@form@super-classes@super-class-prototype-assignment: correctly resolves the prototype of the super class when assigning properites",
  "rollup@form@supports-core-js: supports core-js",
  "rollup@form@supports-es5-shim: supports es5-shim",
  "rollup@form@supports-es6-shim: supports es6-shim",
  "rollup@form@switch-scopes: correctly handles switch scopes",
  "rollup@form@synthetic-named-exports: synthetic named exports",
  "rollup@form@tdz-access-in-declaration: detect accessing TDZ variables within the declaration",
  "rollup@form@tdz-common: preserve common TDZ violations",
  "rollup@form@tdz-pattern-access: handles accessing variables declared in patterns before their declaration",
  "rollup@form@this-in-imports: properly keep or ignore \"this\"-expressions when calling imported functions",
  "rollup@form@this-is-undefined: top-level `this` expression is rewritten as `undefined`@generates es",
  "rollup@form@top-level-await: top-level await support@generates system",
  "rollup@form@treeshake-classes-with-fields: treeshakes classes with class fields (#3564)",
  "rollup@form@treeshake-excess-arguments@arrow-function-arguments: removes unneeded arguments from calls to arrow functions",
  "rollup@form@treeshake-excess-arguments@function-arguments: removes unneeded arguments from calls to functions",
  "rollup@form@treeshake-excess-arguments@namespace-members: removes unneeded arguments across namespace member calls",
  "rollup@form@treeshake-excess-arguments@patterns: removes unneeded arguments from calls when patterns are used",
  "rollup@form@treeshake-excess-arguments@unused-parameters: removes arguments that correspond to unused parameters",
  "rollup@form@treeshake-presets@preset-with-override: allows using the \"preset\" option with overrides",
  "rollup@form@treeshake-presets@recommended: handles treeshake preset \"recommended\"",
  "rollup@form@treeshake-presets@safest: handles treeshake preset \"safest\"",
  "rollup@form@treeshake-presets@smallest: handles treeshake preset \"smallest\"",
  "rollup@form@treeshake-presets@true: handles treeshake preset true",
  "rollup@form@treeshake-sequence-expressions: removes the last element of a sequence expression if it is unused",
  "rollup@form@try-statement-deoptimization@supports-core-js: supports core-js feature detection (#2869)",
  "rollup@form@undefined-default-export: handles default exporting undefined",
  "rollup@form@unmodified-default-exports-function-argument: passing unbound default export to function cannot rebind it",
  "rollup@form@unmodified-default-exports: does not treat property assignment as rebinding for sake of unbound default exports",
  "rollup@form@unused-called-import: does not include called-in-unused-code import@generates es",
  "rollup@form@unused-default-exports: does not name unused-but-included default export@generates es",
  "rollup@form@unused-function-and-class-expressions: properly remove unused function and class expressions@generates es",
  "rollup@form@unused-inner-functions-and-classes: does not include unused inner functions and classes@generates es",
  "rollup@form@use-class-name-in-static-block: use the original class name instead of renderName in class body@generates es",
  "rollup@form@wrap-simplified-expressions: wraps simplified expressions that have become callees if necessary@generates es",
  "rollup@form@yield-expression@missing-space: Inserts space when simplifying yield expression without space"
]